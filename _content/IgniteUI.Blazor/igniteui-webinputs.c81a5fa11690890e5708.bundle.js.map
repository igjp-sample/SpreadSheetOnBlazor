{"version":3,"file":"igniteui-webinputs.c81a5fa11690890e5708.bundle.js","mappings":"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","sources":["webpack://InfragisticsBlazor/./ig/igniteui-webinputs/DockManagerPaneType.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/SplitPaneOrientation.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/UnpinnedLocation.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/DockManagerPoint.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/DockManagerPane_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-dock-manager-pane-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-dock-manager-pane-collection.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-dock-manager-point.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-split-pane-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-split-pane-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-content-pane-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-content-pane-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-document-host-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-document-host-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-content-pane-collection.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-tab-group-pane-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-tab-group-pane-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/DragService.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-drag-service.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/DockManagerShowHeaderIconOnHover.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/TabHeaderElement.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-tab-header-element.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-tab-header-element-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-split-pane-collection.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/SplitPaneCollection.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/DockManagerLayout.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-dock-manager-layout.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/DockManagerResourceStrings.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-dock-manager-resource-strings.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/LayoutChangeEventArgs.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-layout-change-event-args.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/DockManager.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-dock-manager-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-dock-manager-module.ts"],"sourcesContent":["/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Enum, ValueType, markEnum, Type } from \"igniteui-core/type\";\r\n\r\nexport enum DockManagerPaneType {\r\n\tSplitPane = 0,\r\n\tContentPane = 1,\r\n\tTabGroupPane = 2,\r\n\tDocumentHost = 3\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport let DockManagerPaneType_$type = markEnum('DockManagerPaneType', 'SplitPane,0|ContentPane,1|TabGroupPane,2|DocumentHost,3');\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Enum, ValueType, markEnum, Type } from \"igniteui-core/type\";\r\n\r\nexport enum SplitPaneOrientation {\r\n\tHorizontal = 0,\r\n\tVertical = 1\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport let SplitPaneOrientation_$type = markEnum('SplitPaneOrientation', 'Horizontal,0|Vertical,1');\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Enum, ValueType, markEnum, Type } from \"igniteui-core/type\";\r\n\r\nexport enum UnpinnedLocation {\r\n\tTop = 0,\r\n\tBottom = 1,\r\n\tLeft = 2,\r\n\tRight = 3\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport let UnpinnedLocation_$type = markEnum('UnpinnedLocation', 'Top,0|Bottom,1|Left,2|Right,3');\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Base, Type, markType } from \"igniteui-core/type\";\r\nimport { WCNativeHelper } from \"./WCNativeHelper\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class DockManagerPoint extends Base {\r\n\tstatic $t: Type = markType(DockManagerPoint, 'DockManagerPoint');\r\n\tprivate a: WCNativeHelper = new WCNativeHelper();\r\n\tprotected get b(): WCNativeHelper {\r\n\t\treturn this.a;\r\n\t}\r\n\tprivate e: any = null;\r\n\tprotected get nativeElement(): any {\r\n\t\treturn this.e;\r\n\t}\r\n\tprotected set nativeElement(a: any) {\r\n\t\tthis.e = a;\r\n\t\tthis.a.o = this.e;\r\n\t}\r\n\tsetNativeElement(a: any): void {\r\n\t\tthis.nativeElement = a;\r\n\t}\r\n\tget c(): number {\r\n\t\tlet ret_ = this.b.n(\"x\");\r\n\t\treturn <number>ret_;\r\n\t}\r\n\tset c(a: number) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.b.v(\"x\", value_);\r\n\t}\r\n\tget d(): number {\r\n\t\tlet ret_ = this.b.n(\"y\");\r\n\t\treturn <number>ret_;\r\n\t}\r\n\tset d(a: number) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.b.v(\"y\", value_);\r\n\t}\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Base, Type, markType, enumGetBox, EnumUtil } from \"igniteui-core/type\";\r\nimport { WCNativeHelper } from \"./WCNativeHelper\";\r\nimport { DockManagerPaneType, DockManagerPaneType_$type } from \"./DockManagerPaneType\";\r\nimport { UnpinnedLocation, UnpinnedLocation_$type } from \"./UnpinnedLocation\";\r\nimport { ObservableCollection$1 } from \"igniteui-core/ObservableCollection$1\";\r\nimport { SplitPaneOrientation, SplitPaneOrientation_$type } from \"./SplitPaneOrientation\";\r\nimport { DockManagerPoint } from \"./DockManagerPoint\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport abstract class DockManagerPane extends Base {\r\n\tstatic $t: Type = markType(DockManagerPane, 'DockManagerPane');\r\n\tprivate ___mustPassByValue: boolean = true;\r\n\tprotected abstract b(): WCNativeHelper;\r\n\tget d(): string {\r\n\t\tlet ret_ = this.b().n(\"name\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset d(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.b().v(\"name\", value_);\r\n\t}\r\n\tstatic createFromNative(native_: any): DockManagerPane {\r\n\t\tif (native_ == null) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tlet a: string = <string>(native_.type);\r\n\t\tif (a == null || a == undefined) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tswitch (a.toLowerCase()) {\r\n\t\t\tcase \"splitpane\":\r\n\t\t\t{\r\n\t\t\t\tlet b = new SplitPane();\r\n\t\t\t\tb.setNativeElement(native_);\r\n\t\t\t\treturn b;\r\n\t\t\t}\r\n\r\n\t\t\tcase \"contentpane\":\r\n\t\t\t{\r\n\t\t\t\tlet c = new ContentPane();\r\n\t\t\t\tc.setNativeElement(native_);\r\n\t\t\t\treturn c;\r\n\t\t\t}\r\n\r\n\t\t\tcase \"tabgrouppane\":\r\n\t\t\t{\r\n\t\t\t\tlet d = new TabGroupPane();\r\n\t\t\t\td.setNativeElement(native_);\r\n\t\t\t\treturn d;\r\n\t\t\t}\r\n\r\n\t\t\tcase \"documenthost\":\r\n\t\t\t{\r\n\t\t\t\tlet e = new DocumentHost();\r\n\t\t\t\te.setNativeElement(native_);\r\n\t\t\t\treturn e;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class DocumentHost extends DockManagerPane {\r\n\tstatic $t: Type = markType(DocumentHost, 'DocumentHost', (<any>DockManagerPane).$);\r\n\tprivate g: WCNativeHelper = new WCNativeHelper();\r\n\tprotected get h(): WCNativeHelper {\r\n\t\treturn this.g;\r\n\t}\r\n\tprivate j: any = null;\r\n\tprotected get nativeElement(): any {\r\n\t\treturn this.j;\r\n\t}\r\n\tprotected set nativeElement(a: any) {\r\n\t\tthis.j = a;\r\n\t\tthis.g.o = this.j;\r\n\t}\r\n\tsetNativeElement(a: any): void {\r\n\t\tthis.nativeElement = a;\r\n\t}\r\n\tget l(): string {\r\n\t\tlet ret_ = this.h.n(\"id\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset l(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.v(\"id\", value_);\r\n\t}\r\n\tget e(): DockManagerPaneType {\r\n\t\tlet ret_ = this.h.n(\"type\");\r\n\t\tret_ = enumGetBox<DockManagerPaneType>(DockManagerPaneType_$type, EnumUtil.getEnumValue<DockManagerPaneType>(DockManagerPaneType_$type, this.h.f<DockManagerPaneType>(DockManagerPaneType_$type, ret_)));\r\n\t\treturn EnumUtil.getEnumValue<DockManagerPaneType>(DockManagerPaneType_$type, ret_);\r\n\t}\r\n\tset e(a: DockManagerPaneType) {\r\n\t\tlet value_ = <any>enumGetBox<DockManagerPaneType>(DockManagerPaneType_$type, a);\r\n\t\tvalue_ = WCNativeHelper.p(value_.toString());\r\n\t\tthis.h.v(\"type\", value_);\r\n\t}\r\n\tget f(): SplitPane {\r\n\t\tlet ret_ = this.h.m(\"rootPane\", (a: any) => new SplitPane());\r\n\t\treturn <SplitPane>ret_;\r\n\t}\r\n\tset f(a: SplitPane) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.v(\"rootPane\", value_);\r\n\t}\r\n\tget i(): number {\r\n\t\tlet ret_ = this.h.n(\"size\");\r\n\t\treturn <number>ret_;\r\n\t}\r\n\tset i(a: number) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.v(\"size\", value_);\r\n\t}\r\n\tprotected b(): WCNativeHelper {\r\n\t\treturn this.h;\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class TabGroupPane extends DockManagerPane {\r\n\tstatic $t: Type = markType(TabGroupPane, 'TabGroupPane', (<any>DockManagerPane).$);\r\n\tprivate g: WCNativeHelper = new WCNativeHelper();\r\n\tprotected get h(): WCNativeHelper {\r\n\t\treturn this.g;\r\n\t}\r\n\tprivate m: any = null;\r\n\tprotected get nativeElement(): any {\r\n\t\treturn this.m;\r\n\t}\r\n\tprotected set nativeElement(a: any) {\r\n\t\tthis.m = a;\r\n\t\tthis.g.o = this.m;\r\n\t}\r\n\tsetNativeElement(a: any): void {\r\n\t\tthis.nativeElement = a;\r\n\t}\r\n\tget o(): string {\r\n\t\tlet ret_ = this.h.n(\"id\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset o(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.v(\"id\", value_);\r\n\t}\r\n\tget f(): DockManagerPaneType {\r\n\t\tlet ret_ = this.h.n(\"type\");\r\n\t\tret_ = enumGetBox<DockManagerPaneType>(DockManagerPaneType_$type, EnumUtil.getEnumValue<DockManagerPaneType>(DockManagerPaneType_$type, this.h.f<DockManagerPaneType>(DockManagerPaneType_$type, ret_)));\r\n\t\treturn EnumUtil.getEnumValue<DockManagerPaneType>(DockManagerPaneType_$type, ret_);\r\n\t}\r\n\tset f(a: DockManagerPaneType) {\r\n\t\tlet value_ = <any>enumGetBox<DockManagerPaneType>(DockManagerPaneType_$type, a);\r\n\t\tvalue_ = WCNativeHelper.p(value_.toString());\r\n\t\tthis.h.v(\"type\", value_);\r\n\t}\r\n\tget e(): ContentPaneCollection {\r\n\t\tlet ret_ = this.h.k(\"panes\", (a: any) => new ContentPaneCollection(), (a: any) => new ContentPane());\r\n\t\treturn <ContentPaneCollection>ret_;\r\n\t}\r\n\tget l(): number {\r\n\t\tlet ret_ = this.h.n(\"size\");\r\n\t\treturn <number>ret_;\r\n\t}\r\n\tset l(a: number) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.v(\"size\", value_);\r\n\t}\r\n\tget k(): number {\r\n\t\tlet ret_ = this.h.n(\"selectedIndex\");\r\n\t\treturn <number>ret_;\r\n\t}\r\n\tset k(a: number) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.v(\"selectedIndex\", value_);\r\n\t}\r\n\tget i(): boolean {\r\n\t\tlet ret_ = this.h.n(\"allowEmpty\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset i(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.v(\"allowEmpty\", value_);\r\n\t}\r\n\tget j(): boolean {\r\n\t\tlet ret_ = this.h.n(\"isMaximized\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset j(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.v(\"isMaximized\", value_);\r\n\t}\r\n\tprotected b(): WCNativeHelper {\r\n\t\treturn this.h;\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class ContentPane extends DockManagerPane {\r\n\tstatic $t: Type = markType(ContentPane, 'ContentPane', (<any>DockManagerPane).$);\r\n\tprotected b(): WCNativeHelper {\r\n\t\treturn this.h;\r\n\t}\r\n\tprivate g: WCNativeHelper = new WCNativeHelper();\r\n\tprotected get h(): WCNativeHelper {\r\n\t\treturn this.g;\r\n\t}\r\n\tprivate v: any = null;\r\n\tprotected get nativeElement(): any {\r\n\t\treturn this.v;\r\n\t}\r\n\tprotected set nativeElement(a: any) {\r\n\t\tthis.v = a;\r\n\t\tthis.g.o = this.v;\r\n\t}\r\n\tsetNativeElement(a: any): void {\r\n\t\tthis.nativeElement = a;\r\n\t}\r\n\tget ab(): string {\r\n\t\tlet ret_ = this.h.n(\"id\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset ab(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.v(\"id\", value_);\r\n\t}\r\n\tget e(): DockManagerPaneType {\r\n\t\tlet ret_ = this.h.n(\"type\");\r\n\t\tret_ = enumGetBox<DockManagerPaneType>(DockManagerPaneType_$type, EnumUtil.getEnumValue<DockManagerPaneType>(DockManagerPaneType_$type, this.h.f<DockManagerPaneType>(DockManagerPaneType_$type, ret_)));\r\n\t\treturn EnumUtil.getEnumValue<DockManagerPaneType>(DockManagerPaneType_$type, ret_);\r\n\t}\r\n\tset e(a: DockManagerPaneType) {\r\n\t\tlet value_ = <any>enumGetBox<DockManagerPaneType>(DockManagerPaneType_$type, a);\r\n\t\tvalue_ = WCNativeHelper.p(value_.toString());\r\n\t\tthis.h.v(\"type\", value_);\r\n\t}\r\n\tget x(): string {\r\n\t\tlet ret_ = this.h.n(\"contentId\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset x(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.v(\"contentId\", value_);\r\n\t}\r\n\tget z(): string {\r\n\t\tlet ret_ = this.h.n(\"header\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset z(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.v(\"header\", value_);\r\n\t}\r\n\tget aa(): string {\r\n\t\tlet ret_ = this.h.n(\"headerId\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset aa(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.v(\"headerId\", value_);\r\n\t}\r\n\tget ac(): string {\r\n\t\tlet ret_ = this.h.n(\"tabHeaderId\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset ac(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.v(\"tabHeaderId\", value_);\r\n\t}\r\n\tget ad(): string {\r\n\t\tlet ret_ = this.h.n(\"unpinnedHeaderId\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset ad(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.v(\"unpinnedHeaderId\", value_);\r\n\t}\r\n\tget y(): string {\r\n\t\tlet ret_ = this.h.n(\"floatingHeaderId\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset y(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.v(\"floatingHeaderId\", value_);\r\n\t}\r\n\tget t(): number {\r\n\t\tlet ret_ = this.h.n(\"size\");\r\n\t\treturn <number>ret_;\r\n\t}\r\n\tset t(a: number) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.v(\"size\", value_);\r\n\t}\r\n\tget j(): boolean {\r\n\t\tlet ret_ = this.h.n(\"allowClose\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset j(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.v(\"allowClose\", value_);\r\n\t}\r\n\tget m(): boolean {\r\n\t\tlet ret_ = this.h.n(\"allowMaximize\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset m(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.v(\"allowMaximize\", value_);\r\n\t}\r\n\tget n(): boolean {\r\n\t\tlet ret_ = this.h.n(\"allowPinning\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset n(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.v(\"allowPinning\", value_);\r\n\t}\r\n\tget k(): boolean {\r\n\t\tlet ret_ = this.h.n(\"allowDocking\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset k(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.v(\"allowDocking\", value_);\r\n\t}\r\n\tget i(): boolean {\r\n\t\tlet ret_ = this.h.n(\"acceptsInnerDock\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset i(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.v(\"acceptsInnerDock\", value_);\r\n\t}\r\n\tget l(): boolean {\r\n\t\tlet ret_ = this.h.n(\"allowFloating\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset l(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.v(\"allowFloating\", value_);\r\n\t}\r\n\tget u(): number {\r\n\t\tlet ret_ = this.h.n(\"unpinnedSize\");\r\n\t\treturn <number>ret_;\r\n\t}\r\n\tset u(a: number) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.v(\"unpinnedSize\", value_);\r\n\t}\r\n\tget s(): boolean {\r\n\t\tlet ret_ = this.h.n(\"isPinned\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset s(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.v(\"isPinned\", value_);\r\n\t}\r\n\tget r(): boolean {\r\n\t\tlet ret_ = this.h.n(\"isMaximized\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset r(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.v(\"isMaximized\", value_);\r\n\t}\r\n\tget f(): UnpinnedLocation {\r\n\t\tlet ret_ = this.h.n(\"unpinnedLocation\");\r\n\t\tret_ = enumGetBox<UnpinnedLocation>(UnpinnedLocation_$type, EnumUtil.getEnumValue<UnpinnedLocation>(UnpinnedLocation_$type, this.h.f<UnpinnedLocation>(UnpinnedLocation_$type, ret_)));\r\n\t\treturn EnumUtil.getEnumValue<UnpinnedLocation>(UnpinnedLocation_$type, ret_);\r\n\t}\r\n\tset f(a: UnpinnedLocation) {\r\n\t\tlet value_ = <any>enumGetBox<UnpinnedLocation>(UnpinnedLocation_$type, a);\r\n\t\tvalue_ = WCNativeHelper.p(value_.toString());\r\n\t\tthis.h.v(\"unpinnedLocation\", value_);\r\n\t}\r\n\tget q(): boolean {\r\n\t\tlet ret_ = this.h.n(\"hidden\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset q(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.v(\"hidden\", value_);\r\n\t}\r\n\tget o(): boolean {\r\n\t\tlet ret_ = this.h.n(\"disabled\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset o(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.v(\"disabled\", value_);\r\n\t}\r\n\tget p(): boolean {\r\n\t\tlet ret_ = this.h.n(\"documentOnly\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset p(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.v(\"documentOnly\", value_);\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class ContentPaneCollection extends ObservableCollection$1<ContentPane> {\r\n\tstatic $t: Type = markType(ContentPaneCollection, 'ContentPaneCollection', (<any>ObservableCollection$1).$.specialize((<any>ContentPane).$));\r\n\tconstructor() {\r\n\t\tsuper((<any>ContentPane).$, 0);\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class SplitPane extends DockManagerPane {\r\n\tstatic $t: Type = markType(SplitPane, 'SplitPane', (<any>DockManagerPane).$);\r\n\tprotected b(): WCNativeHelper {\r\n\t\treturn this.j;\r\n\t}\r\n\tprivate i: WCNativeHelper = new WCNativeHelper();\r\n\tprotected get j(): WCNativeHelper {\r\n\t\treturn this.i;\r\n\t}\r\n\tprivate q: any = null;\r\n\tprotected get nativeElement(): any {\r\n\t\treturn this.q;\r\n\t}\r\n\tprotected set nativeElement(a: any) {\r\n\t\tthis.q = a;\r\n\t\tthis.i.o = this.q;\r\n\t}\r\n\tsetNativeElement(a: any): void {\r\n\t\tthis.nativeElement = a;\r\n\t}\r\n\tget s(): string {\r\n\t\tlet ret_ = this.j.n(\"id\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset s(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.j.v(\"id\", value_);\r\n\t}\r\n\tget f(): DockManagerPaneType {\r\n\t\tlet ret_ = this.j.n(\"type\");\r\n\t\tret_ = enumGetBox<DockManagerPaneType>(DockManagerPaneType_$type, EnumUtil.getEnumValue<DockManagerPaneType>(DockManagerPaneType_$type, this.j.f<DockManagerPaneType>(DockManagerPaneType_$type, ret_)));\r\n\t\treturn EnumUtil.getEnumValue<DockManagerPaneType>(DockManagerPaneType_$type, ret_);\r\n\t}\r\n\tset f(a: DockManagerPaneType) {\r\n\t\tlet value_ = <any>enumGetBox<DockManagerPaneType>(DockManagerPaneType_$type, a);\r\n\t\tvalue_ = WCNativeHelper.p(value_.toString());\r\n\t\tthis.j.v(\"type\", value_);\r\n\t}\r\n\tget h(): SplitPaneOrientation {\r\n\t\tlet ret_ = this.j.n(\"orientation\");\r\n\t\tret_ = enumGetBox<SplitPaneOrientation>(SplitPaneOrientation_$type, EnumUtil.getEnumValue<SplitPaneOrientation>(SplitPaneOrientation_$type, this.j.f<SplitPaneOrientation>(SplitPaneOrientation_$type, ret_)));\r\n\t\treturn EnumUtil.getEnumValue<SplitPaneOrientation>(SplitPaneOrientation_$type, ret_);\r\n\t}\r\n\tset h(a: SplitPaneOrientation) {\r\n\t\tlet value_ = <any>enumGetBox<SplitPaneOrientation>(SplitPaneOrientation_$type, a);\r\n\t\tvalue_ = WCNativeHelper.p(value_.toString());\r\n\t\tthis.j.v(\"orientation\", value_);\r\n\t}\r\n\tget e(): DockManagerPaneCollection {\r\n\t\tlet ret_ = this.j.k(\"panes\", (a: any) => new DockManagerPaneCollection(), (a: any) => DockManagerPane.createFromNative(a));\r\n\t\treturn <DockManagerPaneCollection>ret_;\r\n\t}\r\n\tget p(): number {\r\n\t\tlet ret_ = this.j.n(\"size\");\r\n\t\treturn <number>ret_;\r\n\t}\r\n\tset p(a: number) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.j.v(\"size\", value_);\r\n\t}\r\n\tget g(): DockManagerPoint {\r\n\t\tlet ret_ = this.j.m(\"floatingLocation\", (a: any) => new DockManagerPoint());\r\n\t\treturn <DockManagerPoint>ret_;\r\n\t}\r\n\tset g(a: DockManagerPoint) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.j.v(\"floatingLocation\", value_);\r\n\t}\r\n\tget o(): number {\r\n\t\tlet ret_ = this.j.n(\"floatingWidth\");\r\n\t\treturn <number>ret_;\r\n\t}\r\n\tset o(a: number) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.j.v(\"floatingWidth\", value_);\r\n\t}\r\n\tget n(): number {\r\n\t\tlet ret_ = this.j.n(\"floatingHeight\");\r\n\t\treturn <number>ret_;\r\n\t}\r\n\tset n(a: number) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.j.v(\"floatingHeight\", value_);\r\n\t}\r\n\tget l(): boolean {\r\n\t\tlet ret_ = this.j.n(\"floatingResizable\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset l(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.j.v(\"floatingResizable\", value_);\r\n\t}\r\n\tget k(): boolean {\r\n\t\tlet ret_ = this.j.n(\"allowEmpty\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset k(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.j.v(\"allowEmpty\", value_);\r\n\t}\r\n\tget m(): boolean {\r\n\t\tlet ret_ = this.j.n(\"isMaximized\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset m(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.j.v(\"isMaximized\", value_);\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class DockManagerPaneCollection extends ObservableCollection$1<DockManagerPane> {\r\n\tstatic $t: Type = markType(DockManagerPaneCollection, 'DockManagerPaneCollection', (<any>ObservableCollection$1).$.specialize((<any>DockManagerPane).$));\r\n\tconstructor() {\r\n\t\tsuper((<any>DockManagerPane).$, 0);\r\n\t}\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { DockManagerPane } from \"./DockManagerPane\";\r\nimport { TypeRegistrar } from \"igniteui-core/type\";\r\nimport { NamePatcher, getAllPropertyNames, fromSpinal, toSpinal, initializePropertiesFromCss } from \"igniteui-core/componentUtil\";\r\n\r\nexport abstract class IgcDockManagerPaneComponent\r\n{\r\n\r\nprotected createImplementation() : DockManagerPane\r\n{\r\n\treturn null;\r\n}\r\n\tprotected _implementation: any;\r\n\t                            /**\r\n\t                             * @hidden \r\n\t                             */\r\n\tpublic get i() : DockManagerPane {\r\n\treturn this._implementation;\r\n\t}/**\r\n\t                             * @hidden \r\n\t                             */\r\n\tstatic _createFromInternal(internal: any) : IgcDockManagerPaneComponent {\r\n\t    if (!internal) {\r\n\t                                    return null;\r\n\t                                }\r\n\t                                if (!internal.$type) {\r\n\t                                    return null;\r\n\t                                }\r\n\t                                let name = internal.$type.name;\r\n\t                                let externalName = \"Igc\" + name + \"Component\";\r\n\t                                if (!TypeRegistrar.isRegistered(externalName)) {\r\n\t                                    return null;\r\n\t                                }\r\n\t                                return TypeRegistrar.create(externalName);\r\n\t                            }\r\n\tprivate onImplementationCreated() {\r\n\t\t\r\n\t}\r\n\tconstructor() {\r\n\t                                    \r\n\t                                    if ((this as any)._styling) {\r\n\t                                        NamePatcher.ensureStylablePatched(Object.getPrototypeOf(this));\r\n\t                                    }\r\n\t\tthis._implementation = this.createImplementation();\r\n\t\t(<any>this._implementation).externalObject = this;\r\n\t\tthis.onImplementationCreated();\r\n\t                                if ((this as any)._initializeAdapters) {\r\n\t                                    (this as any)._initializeAdapters();\r\n\t                                }\r\n\t\r\n\t}\r\n\tprivate _settingAttributes: boolean = false;\r\n\t                                protected _attached: boolean = false;\r\n\t                                    \r\n\t                                private _queuedSetAttributes: { attrName: string, attrValue: string }[] = [];\r\n\t                                protected _enqueueSetAttribute(attrName: string, attrValue: string) {\r\n\t                                     this._queuedSetAttributes.push({ attrName: attrName, attrValue: attrValue });\r\n\t                                }\r\n\t\r\n\t                                protected _flushQueuedAttributes() {\r\n\t                                    this._settingAttributes = true;\r\n\t                                    for (let i = 0; i < this._queuedSetAttributes.length; i++) {\r\n\t                                        this.setAttribute(\r\n\t                                            this._queuedSetAttributes[i].attrName,\r\n\t                                            this._queuedSetAttributes[i].attrValue);\r\n\t                                    }\r\n\t                                    this._settingAttributes = false;\r\n\t                                    this._queuedSetAttributes.length = 0;\r\n\t                                }\r\n\t                                protected _a(attrName: string, attrValue: any) {\r\n\t                                    if (this._updatingFromAttribute) {\r\n\treturn;\r\n\t    }\r\n\t                                    if (attrValue) {\r\n\t                                        attrValue = attrValue.toString();\r\n\t                                    }\r\n\t                                    this._settingAttributes = true;\r\n\t                                    attrName = toSpinal(attrName);\r\n\t                                    if (this._attached) {\r\n\t                                        this.setAttribute(attrName, attrValue);\r\n\t                                    } else { \r\n\t                                        this._enqueueSetAttribute(attrName, attrValue);\r\n\t                                    }\r\n\t                                    this._settingAttributes = false;\r\n\t    }\r\n\t\r\n\t                                protected setAttribute(attrName: string, attrValue: string) {\r\n\t\r\n\t                                }\r\n\t\r\n\t                \r\n\t                private _updatingFromAttribute: boolean = false;\r\n\t                attributeChangedCallback(name: string, oldValue: string, newValue: string) {\r\n\t                    if (this._settingAttributes) {\r\n\t                        return;\r\n\t                    }\r\n\t                    let setName = fromSpinal(name);\r\n\t                    this._updatingFromAttribute = true;\r\n\t                    (<any>this)[setName] = newValue;\r\n\t                    this._updatingFromAttribute = false;\r\n\t                }\r\n\tget name() : string {\r\n\t\treturn (this.i.d as string);\r\n\t}\r\n\tset name(v: string) {\r\n\t\tthis.i.d = v;\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    if ((this as any).findEphemera) {\r\n\t        if (name && name.indexOf(\"@@e:\") == 0) {\r\n\t            return (this as any).findEphemera(name);\r\n\t        }\r\n\t    }\r\n\t\r\n\t\r\n\t        return null;\r\n\t    }\r\n\t\r\n\tprotected __p: string = null;\r\n\tprotected _hasUserValues: Set<string> = new Set<string>();\r\n\tprotected get hasUserValues(): Set<string> {\r\n\t    return this._hasUserValues;\r\n\t}\r\n\tprotected __m(propertyName: string) {\r\n\t    if (!this._inStyling) {\r\n\t        this._hasUserValues.add(propertyName);\r\n\t    }\r\n\t}\r\n\t\r\n\tprotected _stylingContainer: any = null;\r\n\tprotected _stylingParent: any = null;\r\n\tprotected _inStyling: boolean = false;\r\n\tprotected _styling(container: any, component: any, parent?: any) {\r\n\t        if (this._inStyling) {\r\n\t            return;\r\n\t        }\r\n\t        this._inStyling = true;\r\n\t        this._stylingContainer = container;\r\n\t        this._stylingParent = component;\r\n\t\t\r\n\t        let genericPrefix = \"\";\r\n\t        let typeName = (this.i as any).$type.name;\r\n\t        if (typeName.indexOf(\"Xam\") === 0) {\r\n\t            typeName = typeName.substring(3);\r\n\t        }\r\n\t        genericPrefix = toSpinal(\"DockManagerPaneComponent\");\r\n\t\t\r\n\t\tlet additionalPrefixes = [];\r\n\t\t\r\n\t\tlet prefix = toSpinal(typeName);\r\n\t\tadditionalPrefixes.push(prefix + \"-\");\r\n\t\r\n\t        let b = (this.i as any).$type.baseType;\r\n\t        while (b && b.name != \"Object\" && \r\n\t            b.name != \"Base\" && \r\n\t            b.name != \"Control\" && \r\n\t            b.Name != \"DependencyObject\" &&\r\n\t            b.Name != \"FrameworkElement\") {\r\n\t            typeName = b.name;\r\n\t            if (typeName.indexOf(\"Xam\") === 0) {\r\n\t                typeName = typeName.substring(3);\r\n\t            }\r\n\t            let basePrefix = toSpinal(typeName);\r\n\t            additionalPrefixes.push(basePrefix + \"-\");\r\n\t            b = b.baseType;\r\n\t        }\r\n\t\t\r\n\t\tif (parent) {\r\n\t\t\tlet parentTypeName = (parent.i as any).$type.name;\r\n\t            if (parentTypeName.indexOf(\"Xam\") === 0) {\r\n\t                parentTypeName = parentTypeName.substring(3);\r\n\t            }\r\n\t            let parentPrefix = toSpinal(parentTypeName);\r\n\t\r\n\t\t\tadditionalPrefixes.push(parentPrefix + \"-\" + genericPrefix + \"-\");\r\n\t\t\tadditionalPrefixes.push(parentPrefix + \"-\" + prefix + \"-\");\r\n\t\t}\r\n\t\r\n\t\tinitializePropertiesFromCss(container, this, genericPrefix + \"-\", this.hasUserValues, false, additionalPrefixes);\r\n\t\r\n\t        \r\n\t\r\n\t        if ((this as any)._otherStyling) {\r\n\t            (this as any)._otherStyling(container, component, parent);\r\n\t        }\r\n\t        this._inStyling = false;\r\n\t}\r\n}\r\n","import { IgCollection } from 'igniteui-core/IgCollection';\r\nimport { markType } from 'igniteui-core/type';\r\nimport { SyncableObservableCollection$2 } from 'igniteui-core/SyncableObservableCollection$2';\r\nimport { SyncableObservableCollection$1 } from 'igniteui-core/SyncableObservableCollection$1';\r\n\r\nimport { DockManagerPane as DockManagerPane_internal } from './DockManagerPane';\r\nimport { IgcDockManagerPaneComponent as IgcDockManagerPaneComponent } from './igc-dock-manager-pane-component';\r\n\r\nexport class IgcDockManagerPaneCollection extends IgCollection<IgcDockManagerPaneComponent, DockManagerPane_internal> {\r\n    constructor(list?: IgcDockManagerPaneComponent[]) {\r\n        super();\r\n        if (!(IgcDockManagerPaneComponent as any).$type) {\r\n            (IgcDockManagerPaneComponent as any).$type = markType(IgcDockManagerPaneComponent, \"IgcDockManagerPaneComponent\");\r\n        }\r\n        if (list) {\r\n            for (let i = 0; i < list.length; i++) {\r\n                this.add(list[i]);\r\n            }\r\n        }\r\n    }\r\n    \r\n    protected _createInnerColl(): SyncableObservableCollection$2<IgcDockManagerPaneComponent, DockManagerPane_internal> {\r\n        if (!(IgcDockManagerPaneComponent as any).$type) {\r\n            (IgcDockManagerPaneComponent as any).$type = markType(IgcDockManagerPaneComponent, \"IgcDockManagerPaneComponent\");\r\n        }\r\n        let coll = new SyncableObservableCollection$2<IgcDockManagerPaneComponent, DockManagerPane_internal>((IgcDockManagerPaneComponent as any).$type, (DockManagerPane_internal as any).$type, 0);\r\n        coll.compare = (ext, int) => { \r\n            let comp: any = ext;\r\n            if (comp._implementation) {\r\n                comp = comp._implementation;\r\n            }\r\n            if (comp.equals) {\r\n                return comp.equals(int);\r\n            }\r\n            return comp === int;\r\n        };\r\n        coll.createTo = (ext) => {\r\n            return (ext as any)._implementation;\r\n        }\r\n        coll.createFrom = (int) => {\r\n            let ext = (int as any).externalObject;\r\n            if (!ext) {\r\n                ext = IgcDockManagerPaneComponent._createFromInternal(int);\r\n\r\n                if (ext) {\r\n                    (ext as any)._implementation = int;\r\n                }\r\n            }\r\n            return ext;\r\n        }\r\n        return coll;\r\n    } \r\n}\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { DockManagerPoint as DockManagerPoint_internal } from \"./DockManagerPoint\";\r\n\r\nexport class IgcDockManagerPoint\r\n{\r\n\r\nprotected createImplementation() : DockManagerPoint_internal\r\n{\r\n\treturn new DockManagerPoint_internal();\r\n}\r\n\tprotected _implementation: any;\r\n\t                            /**\r\n\t                             * @hidden \r\n\t                             */\r\n\tpublic get i() : DockManagerPoint_internal {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tprivate onImplementationCreated() {\r\n\t\t\r\n\t}\r\n\tconstructor() {\r\n\tthis._implementation = this.createImplementation();\r\n\t(<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t                                if ((this as any)._initializeAdapters) {\r\n\t                                    (this as any)._initializeAdapters();\r\n\t                                }\r\n\t\r\n\t}\r\n\tprotected _provideImplementation(i: any) {\r\n\t    this._implementation = i;\r\n\t    (<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t                                if ((this as any)._initializeAdapters) {\r\n\t                                    (this as any)._initializeAdapters();\r\n\t                                }\r\n\t\r\n\t}\r\n\tget x() : number {\r\n\t\treturn (this.i.c as number);\r\n\t}\r\n\tset x(v: number) {\r\n\t\tthis.i.c = +v;\r\n\t}\r\n\tget y() : number {\r\n\t\treturn (this.i.d as number);\r\n\t}\r\n\tset y(v: number) {\r\n\t\tthis.i.d = +v;\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    if ((this as any).findEphemera) {\r\n\t        if (name && name.indexOf(\"@@e:\") == 0) {\r\n\t            return (this as any).findEphemera(name);\r\n\t        }\r\n\t    }\r\n\t\r\n\t\r\n\t        return null;\r\n\t    }\r\n\tpublic setNativeElement(element: any) {\r\n\t\tthis.i.setNativeElement(element);\r\n\t}\r\n}\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { DockManagerPaneType, DockManagerPaneType_$type } from \"./DockManagerPaneType\";\r\nimport { SplitPaneOrientation, SplitPaneOrientation_$type } from \"./SplitPaneOrientation\";\r\nimport { IgcDockManagerPaneCollection } from \"./igc-dock-manager-pane-collection\";\r\nimport { IgcDockManagerPoint } from \"./igc-dock-manager-point\";\r\nimport { IgcDockManagerPaneComponent } from \"./igc-dock-manager-pane-component\";\r\nimport { SplitPane } from \"./SplitPane\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureEnum, enumToString, ensureBool } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\nimport { DockManagerPaneCollection as DockManagerPaneCollection_internal } from \"./DockManagerPaneCollection\";\r\nimport { DockManagerPane } from \"./DockManagerPane\";\r\nimport { SyncableObservableCollection$1 } from \"igniteui-core/SyncableObservableCollection$1\";\r\n\r\nexport class IgcSplitPaneComponent extends IgcDockManagerPaneComponent\r\n{\r\n\r\nprotected createImplementation() : SplitPane\r\n{\r\n\treturn new SplitPane();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : SplitPane {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\t\r\n\t                public static register() { }\r\n\t/**\r\n\t * The id of the pane. If not set the Dock Manager generates it automatically.\r\n\t*/\r\n\tget id() : string {\r\n\t\treturn (this.i.s as string);\r\n\t}\r\n\tset id(v: string) {\r\n\t\tthis.i.s = v;\r\n\t}\r\n\t/**\r\n\t * The type of the pane.\r\n\t*/\r\n\tget type() : DockManagerPaneType {\r\n\t\treturn this.i.f;\r\n\t}\r\n\tset type(v: DockManagerPaneType) {\r\n\t\tthis.i.f = ensureEnum<DockManagerPaneType>(DockManagerPaneType_$type, v);\r\n\t                                        this._a(\"Type\", enumToString<DockManagerPaneType>(DockManagerPaneType_$type, this.i.f));\r\n\t}\r\n\t/**\r\n\t * The orientation of the split pane.\r\n\t*/\r\n\tget orientation() : SplitPaneOrientation {\r\n\t\treturn this.i.h;\r\n\t}\r\n\tset orientation(v: SplitPaneOrientation) {\r\n\t\tthis.i.h = ensureEnum<SplitPaneOrientation>(SplitPaneOrientation_$type, v);\r\n\t                                        this._a(\"orientation\", enumToString<SplitPaneOrientation>(SplitPaneOrientation_$type, this.i.h));\r\n\t}\r\n\tprivate _panes: IgcDockManagerPaneCollection = null;\r\n\t                                \r\n\t/**\r\n\t * The child panes of the split pane.\r\n\t*/\r\n\tget panes() : IgcDockManagerPaneCollection {\r\n\t                                        if (this._panes === null) {\r\n\t                                            let coll = new IgcDockManagerPaneCollection();\r\n\t                                            let innerColl = this.i.e;\r\n\t\t\tif (!innerColl) {\r\n\t                                            \tinnerColl = new DockManagerPaneCollection_internal();\r\n\t\t\t}\r\n\t                                            this._panes = (coll as any)._fromInner(innerColl);\r\n\t                                            \r\n\t                                        }\r\n\t\treturn this._panes;\r\n\t}\r\n\tset panes(v: IgcDockManagerPaneCollection) {\r\n\t                                        if (this._panes !== null) {\r\n\t                                            (this._panes as any)._setSyncTarget(null);\r\n\t                                            this._panes = null;\r\n\t                                        }\r\n\t                                        let coll = new IgcDockManagerPaneCollection();\r\n\t                                        this._panes = (coll as any)._fromOuter(v);\r\n\t                                        let syncColl = new SyncableObservableCollection$1<DockManagerPane>((DockManagerPane as any).$type);\r\n\t                                        let innerColl = this.i.e;\r\n\t\tif (!innerColl) {\r\n\t                                        \tinnerColl = new DockManagerPaneCollection_internal();\r\n\t\t}\r\n\t                                        (syncColl as any)._inner = innerColl;\r\n\t                                        syncColl.clear();\r\n\t                                        (this._panes as any)._setSyncTarget(syncColl);\r\n\t                                        \r\n\t}\r\n\t/**\r\n\t * The size of the pane relative to its sibling panes' sizes. Defaults to 100.\r\n\t*/\r\n\tget size() : number {\r\n\t\treturn (this.i.p as number);\r\n\t}\r\n\tset size(v: number) {\r\n\t\tthis.i.p = +v;\r\n\t                                        this._a(\"size\", this.i.p);\r\n\t}\r\n\t/**\r\n\t * The absolute location point of the pane. Applies only for floating panes.\r\n\t*/\r\n\tget floatingLocation() : IgcDockManagerPoint {\r\n\t                                        const r = this.i.g;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = new IgcDockManagerPoint();\r\n\t                                            if ((r as any).$type) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            } else {\r\n\t                                                if ((e.i as any).setNativeElement) {\r\n\t                                                    (e.i as any).setNativeElement(r);\r\n\t                                                }\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset floatingLocation(v: IgcDockManagerPoint) {\r\n\t\tv == null ? this.i.g = null : this.i.g = v.i;\r\n\t}\r\n\t/**\r\n\t * The absolute width of the pane. Applies only for floating panes. Defaults to 100.\r\n\t*/\r\n\tget floatingWidth() : number {\r\n\t\treturn (this.i.o as number);\r\n\t}\r\n\tset floatingWidth(v: number) {\r\n\t\tthis.i.o = +v;\r\n\t                                        this._a(\"floatingWidth\", this.i.o);\r\n\t}\r\n\t/**\r\n\t * The absolute height of the pane. Applies only for floating panes. Defaults to 100.\r\n\t*/\r\n\tget floatingHeight() : number {\r\n\t\treturn (this.i.n as number);\r\n\t}\r\n\tset floatingHeight(v: number) {\r\n\t\tthis.i.n = +v;\r\n\t                                        this._a(\"floatingHeight\", this.i.n);\r\n\t}\r\n\t/**\r\n\t * Determines whether floating pane resizing is allowed. Applies only for floating panes.\r\n\t*/\r\n\tget floatingResizable() : boolean {\r\n\t\treturn (this.i.l as boolean);\r\n\t}\r\n\tset floatingResizable(v: boolean) {\r\n\t\tthis.i.l = ensureBool(v);\r\n\t                                        this._a(\"floatingResizable\", this.i.l);\r\n\t}\r\n\t/**\r\n\t * Determines whether the pane should present in the UI when empty.\r\n\t*/\r\n\tget allowEmpty() : boolean {\r\n\t\treturn (this.i.k as boolean);\r\n\t}\r\n\tset allowEmpty(v: boolean) {\r\n\t\tthis.i.k = ensureBool(v);\r\n\t                                        this._a(\"allowEmpty\", this.i.k);\r\n\t}\r\n\t/**\r\n\t * Determines whether a split pane is maximized or not. Defaults to false.\r\n\t*/\r\n\tget isMaximized() : boolean {\r\n\t\treturn (this.i.m as boolean);\r\n\t}\r\n\tset isMaximized(v: boolean) {\r\n\t\tthis.i.m = ensureBool(v);\r\n\t                                        this._a(\"isMaximized\", this.i.m);\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    var baseResult = super.findByName(name);\r\n\t    if (baseResult)\r\n\t    {\r\n\t        return baseResult;\r\n\t    }\r\n\t\r\n\tif (this.panes != null && this.panes.findByName && this.panes.findByName(name)) { return this.panes.findByName(name); }\r\n\tif (this.floatingLocation && (this.floatingLocation as any).name && (this.floatingLocation as any).name == name) { return this.floatingLocation; }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\tpublic setNativeElement(element: any) {\r\n\t\tthis.i.setNativeElement(element);\r\n\t}\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\n\r\nimport { IgcSplitPaneComponent } from './igc-split-pane-component';\r\nimport { SplitPane } from './SplitPane';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcSplitPaneModule {\r\n    public static register(): void {\r\n        IgcSplitPaneComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcSplitPaneComponent\", IgcSplitPaneComponent);\r\n        TypeRegistrar.register(\"SplitPane\", (<any>SplitPane).$type);\r\n    }\r\n}\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { DockManagerPaneType, DockManagerPaneType_$type } from \"./DockManagerPaneType\";\r\nimport { UnpinnedLocation, UnpinnedLocation_$type } from \"./UnpinnedLocation\";\r\nimport { IgcDockManagerPaneComponent } from \"./igc-dock-manager-pane-component\";\r\nimport { ContentPane } from \"./ContentPane\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureEnum, enumToString, ensureBool } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\n\r\nexport class IgcContentPaneComponent extends IgcDockManagerPaneComponent\r\n{\r\n\r\nprotected createImplementation() : ContentPane\r\n{\r\n\treturn new ContentPane();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : ContentPane {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\t\r\n\t                public static register() { }\r\n\t/**\r\n\t * The id of the pane. If not set the Dock Manager generates it automatically.\r\n\t*/\r\n\tget id() : string {\r\n\t\treturn (this.i.ab as string);\r\n\t}\r\n\tset id(v: string) {\r\n\t\tthis.i.ab = v;\r\n\t}\r\n\t/**\r\n\t * The type of the pane.\r\n\t*/\r\n\tget type() : DockManagerPaneType {\r\n\t\treturn this.i.e;\r\n\t}\r\n\tset type(v: DockManagerPaneType) {\r\n\t\tthis.i.e = ensureEnum<DockManagerPaneType>(DockManagerPaneType_$type, v);\r\n\t                                        this._a(\"Type\", enumToString<DockManagerPaneType>(DockManagerPaneType_$type, this.i.e));\r\n\t}\r\n\t/**\r\n\t * The slot attribute's value of the content element.\r\n\t*/\r\n\tget contentId() : string {\r\n\t\treturn (this.i.x as string);\r\n\t}\r\n\tset contentId(v: string) {\r\n\t\tthis.i.x = v;\r\n\t}\r\n\t/**\r\n\t * The text header of the content pane. Even if header slot templates are used, the text header is used for aria label.\r\n\t*/\r\n\tget header() : string {\r\n\t\treturn (this.i.z as string);\r\n\t}\r\n\tset header(v: string) {\r\n\t\tthis.i.z = v;\r\n\t}\r\n\t/**\r\n\t * The slot attribute's value of the content pane header element. If not set, the `header` property value is used.\r\n\t*/\r\n\tget headerId() : string {\r\n\t\treturn (this.i.aa as string);\r\n\t}\r\n\tset headerId(v: string) {\r\n\t\tthis.i.aa = v;\r\n\t}\r\n\t/**\r\n\t * The slot attribute's value of the tab header element. If not set, the `header` property value is used.\r\n\t*/\r\n\tget tabHeaderId() : string {\r\n\t\treturn (this.i.ac as string);\r\n\t}\r\n\tset tabHeaderId(v: string) {\r\n\t\tthis.i.ac = v;\r\n\t}\r\n\t/**\r\n\t * The slot attribute's value of the unpinned header element. If not set, the `header` property value is used.\r\n\t*/\r\n\tget unpinnedHeaderId() : string {\r\n\t\treturn (this.i.ad as string);\r\n\t}\r\n\tset unpinnedHeaderId(v: string) {\r\n\t\tthis.i.ad = v;\r\n\t}\r\n\t/**\r\n\t * The slot attribute's value of the floating header element. If not set, the `headerId` property value is used.\r\n\t*/\r\n\tget floatingHeaderId() : string {\r\n\t\treturn (this.i.y as string);\r\n\t}\r\n\tset floatingHeaderId(v: string) {\r\n\t\tthis.i.y = v;\r\n\t}\r\n\t/**\r\n\t * The size of the pane relative to its sibling panes' sizes. Defaults to 100.\r\n\t*/\r\n\tget size() : number {\r\n\t\treturn (this.i.t as number);\r\n\t}\r\n\tset size(v: number) {\r\n\t\tthis.i.t = +v;\r\n\t                                        this._a(\"size\", this.i.t);\r\n\t}\r\n\t/**\r\n\t * Determines whether the end user is allowed to close the pane. Defaults to true.\r\n\t*/\r\n\tget allowClose() : boolean {\r\n\t\treturn (this.i.j as boolean);\r\n\t}\r\n\tset allowClose(v: boolean) {\r\n\t\tthis.i.j = ensureBool(v);\r\n\t                                        this._a(\"allowClose\", this.i.j);\r\n\t}\r\n\t/**\r\n\t * Determines whether the end user is allowed to maximize the pane.\r\n\t*/\r\n\tget allowMaximize() : boolean {\r\n\t\treturn (this.i.m as boolean);\r\n\t}\r\n\tset allowMaximize(v: boolean) {\r\n\t\tthis.i.m = ensureBool(v);\r\n\t                                        this._a(\"allowMaximize\", this.i.m);\r\n\t}\r\n\t/**\r\n\t * Determines whether the end user is allowed to pin/unpin the pane. Defaults to true.\r\n\t*/\r\n\tget allowPinning() : boolean {\r\n\t\treturn (this.i.n as boolean);\r\n\t}\r\n\tset allowPinning(v: boolean) {\r\n\t\tthis.i.n = ensureBool(v);\r\n\t                                        this._a(\"allowPinning\", this.i.n);\r\n\t}\r\n\t/**\r\n\t * Determines whether the end user is allowed to dock the pane. Defaults to true.\r\n\t*/\r\n\tget allowDocking() : boolean {\r\n\t\treturn (this.i.k as boolean);\r\n\t}\r\n\tset allowDocking(v: boolean) {\r\n\t\tthis.i.k = ensureBool(v);\r\n\t                                        this._a(\"allowDocking\", this.i.k);\r\n\t}\r\n\t/**\r\n\t * Determines whether the end user can inner dock another pane in this one. Defaults to true.\r\n\t*/\r\n\tget acceptsInnerDock() : boolean {\r\n\t\treturn (this.i.i as boolean);\r\n\t}\r\n\tset acceptsInnerDock(v: boolean) {\r\n\t\tthis.i.i = ensureBool(v);\r\n\t                                        this._a(\"acceptsInnerDock\", this.i.i);\r\n\t}\r\n\t/**\r\n\t * Determines whether the end user is allowed to make the pane floating. Defaults to true.\r\n\t*/\r\n\tget allowFloating() : boolean {\r\n\t\treturn (this.i.l as boolean);\r\n\t}\r\n\tset allowFloating(v: boolean) {\r\n\t\tthis.i.l = ensureBool(v);\r\n\t                                        this._a(\"allowFloating\", this.i.l);\r\n\t}\r\n\t/**\r\n\t * The absolute size of the pane in an unpinned state. Defaults to 200.\r\n\t*/\r\n\tget unpinnedSize() : number {\r\n\t\treturn (this.i.u as number);\r\n\t}\r\n\tset unpinnedSize(v: number) {\r\n\t\tthis.i.u = +v;\r\n\t                                        this._a(\"unpinnedSize\", this.i.u);\r\n\t}\r\n\t/**\r\n\t * Determines whether a content pane is pinned or not. Defaults to true.\r\n\t*/\r\n\tget isPinned() : boolean {\r\n\t\treturn (this.i.s as boolean);\r\n\t}\r\n\tset isPinned(v: boolean) {\r\n\t\tthis.i.s = ensureBool(v);\r\n\t                                        this._a(\"isPinned\", this.i.s);\r\n\t}\r\n\t/**\r\n\t * Determines whether a content pane is maximized or not. Defaults to false.\r\n\t*/\r\n\tget isMaximized() : boolean {\r\n\t\treturn (this.i.r as boolean);\r\n\t}\r\n\tset isMaximized(v: boolean) {\r\n\t\tthis.i.r = ensureBool(v);\r\n\t                                        this._a(\"isMaximized\", this.i.r);\r\n\t}\r\n\t/**\r\n\t * The desired unpinned location of the content pane.\r\n\t * If not set the Dock Manager automatically calculates it based on the location of the pane relatively to the document host.\r\n\t * If more than one document host is presented, the closest one in the pane hierarchy will be used for the calculation.\r\n\t * If there is no document host, the default location is left.\r\n\t*/\r\n\tget unpinnedLocation() : UnpinnedLocation {\r\n\t\treturn this.i.f;\r\n\t}\r\n\tset unpinnedLocation(v: UnpinnedLocation) {\r\n\t\tthis.i.f = ensureEnum<UnpinnedLocation>(UnpinnedLocation_$type, v);\r\n\t                                        this._a(\"unpinnedLocation\", enumToString<UnpinnedLocation>(UnpinnedLocation_$type, this.i.f));\r\n\t}\r\n\t/**\r\n\t * Determines whether a pane is hidden in the UI. Defaults to false.\r\n\t*/\r\n\tget hidden() : boolean {\r\n\t\treturn (this.i.q as boolean);\r\n\t}\r\n\tset hidden(v: boolean) {\r\n\t\tthis.i.q = ensureBool(v);\r\n\t                                        this._a(\"hidden\", this.i.q);\r\n\t}\r\n\t/**\r\n\t * Determines whether a pane is disabled. Defaults to false.\r\n\t*/\r\n\tget disabled() : boolean {\r\n\t\treturn (this.i.o as boolean);\r\n\t}\r\n\tset disabled(v: boolean) {\r\n\t\tthis.i.o = ensureBool(v);\r\n\t                                        this._a(\"disabled\", this.i.o);\r\n\t}\r\n\t/**\r\n\t * Marks that a content pane can be docked only inside a document host.\r\n\t*/\r\n\tget documentOnly() : boolean {\r\n\t\treturn (this.i.p as boolean);\r\n\t}\r\n\tset documentOnly(v: boolean) {\r\n\t\tthis.i.p = ensureBool(v);\r\n\t                                        this._a(\"documentOnly\", this.i.p);\r\n\t}\r\n\tpublic setNativeElement(element: any) {\r\n\t\tthis.i.setNativeElement(element);\r\n\t}\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\n\r\nimport { IgcContentPaneComponent } from './igc-content-pane-component';\r\nimport { ContentPane } from './ContentPane';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcContentPaneModule {\r\n    public static register(): void {\r\n        IgcContentPaneComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcContentPaneComponent\", IgcContentPaneComponent);\r\n        TypeRegistrar.register(\"ContentPane\", (<any>ContentPane).$type);\r\n    }\r\n}\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { DockManagerPaneType, DockManagerPaneType_$type } from \"./DockManagerPaneType\";\r\nimport { IgcSplitPaneComponent } from \"./igc-split-pane-component\";\r\nimport { IgcDockManagerPaneComponent } from \"./igc-dock-manager-pane-component\";\r\nimport { DocumentHost } from \"./DocumentHost\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureEnum, enumToString } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\n\r\nexport class IgcDocumentHostComponent extends IgcDockManagerPaneComponent\r\n{\r\n\r\nprotected createImplementation() : DocumentHost\r\n{\r\n\treturn new DocumentHost();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : DocumentHost {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\t\r\n\t                public static register() { }\r\n\t/**\r\n\t * The id of the pane. If not set the Dock Manager generates it automatically.\r\n\t*/\r\n\tget id() : string {\r\n\t\treturn (this.i.l as string);\r\n\t}\r\n\tset id(v: string) {\r\n\t\tthis.i.l = v;\r\n\t}\r\n\t/**\r\n\t * The type of the pane.\r\n\t*/\r\n\tget type() : DockManagerPaneType {\r\n\t\treturn this.i.e;\r\n\t}\r\n\tset type(v: DockManagerPaneType) {\r\n\t\tthis.i.e = ensureEnum<DockManagerPaneType>(DockManagerPaneType_$type, v);\r\n\t                                        this._a(\"Type\", enumToString<DockManagerPaneType>(DockManagerPaneType_$type, this.i.e));\r\n\t}\r\n\t/**\r\n\t * The root split pane of the document host.\r\n\t*/\r\n\tget rootPane() : IgcSplitPaneComponent {\r\n\t                                        const r = this.i.f;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = IgcSplitPaneComponent._createFromInternal(r);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset rootPane(v: IgcSplitPaneComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.f = null : this.i.f = v.i;\r\n\t}\r\n\t/**\r\n\t * The size of the pane relative to its sibling panes' sizes. Defaults to 100.\r\n\t*/\r\n\tget size() : number {\r\n\t\treturn (this.i.i as number);\r\n\t}\r\n\tset size(v: number) {\r\n\t\tthis.i.i = +v;\r\n\t                                        this._a(\"size\", this.i.i);\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    var baseResult = super.findByName(name);\r\n\t    if (baseResult)\r\n\t    {\r\n\t        return baseResult;\r\n\t    }\r\n\t\r\n\tif (this.rootPane && (this.rootPane as any).name && (this.rootPane as any).name == name) { return this.rootPane; }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\t\r\n\t        protected _styling(container: any, component: any, parent?: any) {\r\n\t            super._styling(container, component, parent);\r\n\t\r\n\t            this._inStyling = true;\r\n\t            if (this.rootPane && (this.rootPane as any)._styling) {\r\n\t    (this.rootPane as any)._styling(container, component, this);\r\n\t}\r\n\t\r\n\t            this._inStyling = false;\r\n\t        }\r\n\tpublic setNativeElement(element: any) {\r\n\t\tthis.i.setNativeElement(element);\r\n\t}\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\n\r\nimport { IgcDocumentHostComponent } from './igc-document-host-component';\r\nimport { DocumentHost } from './DocumentHost';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcDocumentHostModule {\r\n    public static register(): void {\r\n        IgcDocumentHostComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcDocumentHostComponent\", IgcDocumentHostComponent);\r\n        TypeRegistrar.register(\"DocumentHost\", (<any>DocumentHost).$type);\r\n    }\r\n}\r\n","import { IgCollection } from 'igniteui-core/IgCollection';\r\nimport { markType } from 'igniteui-core/type';\r\nimport { SyncableObservableCollection$2 } from 'igniteui-core/SyncableObservableCollection$2';\r\nimport { SyncableObservableCollection$1 } from 'igniteui-core/SyncableObservableCollection$1';\r\n\r\nimport { ContentPane as ContentPane_internal } from './ContentPane';\r\nimport { IgcContentPaneComponent as IgcContentPaneComponent } from './igc-content-pane-component';\r\n\r\nexport class IgcContentPaneCollection extends IgCollection<IgcContentPaneComponent, ContentPane_internal> {\r\n    constructor(list?: IgcContentPaneComponent[]) {\r\n        super();\r\n        if (!(IgcContentPaneComponent as any).$type) {\r\n            (IgcContentPaneComponent as any).$type = markType(IgcContentPaneComponent, \"IgcContentPaneComponent\");\r\n        }\r\n        if (list) {\r\n            for (let i = 0; i < list.length; i++) {\r\n                this.add(list[i]);\r\n            }\r\n        }\r\n    }\r\n    \r\n    protected _createInnerColl(): SyncableObservableCollection$2<IgcContentPaneComponent, ContentPane_internal> {\r\n        if (!(IgcContentPaneComponent as any).$type) {\r\n            (IgcContentPaneComponent as any).$type = markType(IgcContentPaneComponent, \"IgcContentPaneComponent\");\r\n        }\r\n        let coll = new SyncableObservableCollection$2<IgcContentPaneComponent, ContentPane_internal>((IgcContentPaneComponent as any).$type, (ContentPane_internal as any).$type, 0);\r\n        coll.compare = (ext, int) => { \r\n            let comp: any = ext;\r\n            if (comp._implementation) {\r\n                comp = comp._implementation;\r\n            }\r\n            if (comp.equals) {\r\n                return comp.equals(int);\r\n            }\r\n            return comp === int;\r\n        };\r\n        coll.createTo = (ext) => {\r\n            return (ext as any)._implementation;\r\n        }\r\n        coll.createFrom = (int) => {\r\n            let ext = (int as any).externalObject;\r\n            if (!ext) {\r\n                ext = new IgcContentPaneComponent();\r\n\r\n                if (ext) {\r\n                    (ext as any)._implementation = int;\r\n                }\r\n            }\r\n            return ext;\r\n        }\r\n        return coll;\r\n    } \r\n}\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { DockManagerPaneType, DockManagerPaneType_$type } from \"./DockManagerPaneType\";\r\nimport { IgcContentPaneCollection } from \"./igc-content-pane-collection\";\r\nimport { IgcDockManagerPaneComponent } from \"./igc-dock-manager-pane-component\";\r\nimport { TabGroupPane } from \"./TabGroupPane\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureEnum, enumToString, ensureBool } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\nimport { ContentPaneCollection as ContentPaneCollection_internal } from \"./ContentPaneCollection\";\r\nimport { ContentPane } from \"./ContentPane\";\r\nimport { SyncableObservableCollection$1 } from \"igniteui-core/SyncableObservableCollection$1\";\r\n\r\nexport class IgcTabGroupPaneComponent extends IgcDockManagerPaneComponent\r\n{\r\n\r\nprotected createImplementation() : TabGroupPane\r\n{\r\n\treturn new TabGroupPane();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : TabGroupPane {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\t\r\n\t                public static register() { }\r\n\t/**\r\n\t * The id of the pane. If not set the Dock Manager generates it automatically.\r\n\t*/\r\n\tget id() : string {\r\n\t\treturn (this.i.o as string);\r\n\t}\r\n\tset id(v: string) {\r\n\t\tthis.i.o = v;\r\n\t}\r\n\t/**\r\n\t * The type of the pane.\r\n\t*/\r\n\tget type() : DockManagerPaneType {\r\n\t\treturn this.i.f;\r\n\t}\r\n\tset type(v: DockManagerPaneType) {\r\n\t\tthis.i.f = ensureEnum<DockManagerPaneType>(DockManagerPaneType_$type, v);\r\n\t                                        this._a(\"Type\", enumToString<DockManagerPaneType>(DockManagerPaneType_$type, this.i.f));\r\n\t}\r\n\tprivate _panes: IgcContentPaneCollection = null;\r\n\t                                \r\n\t/**\r\n\t * The child content panes of the tab group.\r\n\t*/\r\n\tget panes() : IgcContentPaneCollection {\r\n\t                                        if (this._panes === null) {\r\n\t                                            let coll = new IgcContentPaneCollection();\r\n\t                                            let innerColl = this.i.e;\r\n\t\t\tif (!innerColl) {\r\n\t                                            \tinnerColl = new ContentPaneCollection_internal();\r\n\t\t\t}\r\n\t                                            this._panes = (coll as any)._fromInner(innerColl);\r\n\t                                            \r\n\t                                        }\r\n\t\treturn this._panes;\r\n\t}\r\n\tset panes(v: IgcContentPaneCollection) {\r\n\t                                        if (this._panes !== null) {\r\n\t                                            (this._panes as any)._setSyncTarget(null);\r\n\t                                            this._panes = null;\r\n\t                                        }\r\n\t                                        let coll = new IgcContentPaneCollection();\r\n\t                                        this._panes = (coll as any)._fromOuter(v);\r\n\t                                        let syncColl = new SyncableObservableCollection$1<ContentPane>((ContentPane as any).$type);\r\n\t                                        let innerColl = this.i.e;\r\n\t\tif (!innerColl) {\r\n\t                                        \tinnerColl = new ContentPaneCollection_internal();\r\n\t\t}\r\n\t                                        (syncColl as any)._inner = innerColl;\r\n\t                                        syncColl.clear();\r\n\t                                        (this._panes as any)._setSyncTarget(syncColl);\r\n\t                                        \r\n\t}\r\n\t/**\r\n\t * The size of the pane relative to its sibling panes' sizes. Defaults to 100.\r\n\t*/\r\n\tget size() : number {\r\n\t\treturn (this.i.l as number);\r\n\t}\r\n\tset size(v: number) {\r\n\t\tthis.i.l = +v;\r\n\t                                        this._a(\"size\", this.i.l);\r\n\t}\r\n\t/**\r\n\t * The index of the selected tab.\r\n\t*/\r\n\tget selectedIndex() : number {\r\n\t\treturn (this.i.k as number);\r\n\t}\r\n\tset selectedIndex(v: number) {\r\n\t\tthis.i.k = +v;\r\n\t                                        this._a(\"selectedIndex\", this.i.k);\r\n\t}\r\n\t/**\r\n\t * Determines whether the pane should present in the UI when empty.\r\n\t*/\r\n\tget allowEmpty() : boolean {\r\n\t\treturn (this.i.i as boolean);\r\n\t}\r\n\tset allowEmpty(v: boolean) {\r\n\t\tthis.i.i = ensureBool(v);\r\n\t                                        this._a(\"allowEmpty\", this.i.i);\r\n\t}\r\n\t/**\r\n\t * Determines whether a tab group is maximized or not. Defaults to false.\r\n\t*/\r\n\tget isMaximized() : boolean {\r\n\t\treturn (this.i.j as boolean);\r\n\t}\r\n\tset isMaximized(v: boolean) {\r\n\t\tthis.i.j = ensureBool(v);\r\n\t                                        this._a(\"isMaximized\", this.i.j);\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    var baseResult = super.findByName(name);\r\n\t    if (baseResult)\r\n\t    {\r\n\t        return baseResult;\r\n\t    }\r\n\t\r\n\tif (this.panes != null && this.panes.findByName && this.panes.findByName(name)) { return this.panes.findByName(name); }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\tpublic setNativeElement(element: any) {\r\n\t\tthis.i.setNativeElement(element);\r\n\t}\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\n\r\nimport { IgcTabGroupPaneComponent } from './igc-tab-group-pane-component';\r\nimport { TabGroupPane } from './TabGroupPane';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcTabGroupPaneModule {\r\n    public static register(): void {\r\n        IgcTabGroupPaneComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcTabGroupPaneComponent\", IgcTabGroupPaneComponent);\r\n        TypeRegistrar.register(\"TabGroupPane\", (<any>TabGroupPane).$type);\r\n    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Base, Type, markType } from \"igniteui-core/type\";\r\nimport { WCNativeHelper } from \"./WCNativeHelper\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class DragService extends Base {\r\n\tstatic $t: Type = markType(DragService, 'DragService');\r\n\tprivate a: WCNativeHelper = new WCNativeHelper();\r\n\tprotected get b(): WCNativeHelper {\r\n\t\treturn this.a;\r\n\t}\r\n\tprivate c: any = null;\r\n\tprotected get nativeElement(): any {\r\n\t\treturn this.c;\r\n\t}\r\n\tprotected set nativeElement(a: any) {\r\n\t\tthis.c = a;\r\n\t\tthis.a.o = this.c;\r\n\t}\r\n\tsetNativeElement(a: any): void {\r\n\t\tthis.nativeElement = a;\r\n\t}\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { DragService as DragService_internal } from \"./DragService\";\r\n\r\nexport class IgcDragService\r\n{\r\n\r\nprotected createImplementation() : DragService_internal\r\n{\r\n\treturn new DragService_internal();\r\n}\r\n\tprotected _implementation: any;\r\n\t                            /**\r\n\t                             * @hidden \r\n\t                             */\r\n\tpublic get i() : DragService_internal {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tprivate onImplementationCreated() {\r\n\t\t\r\n\t}\r\n\tconstructor() {\r\n\tthis._implementation = this.createImplementation();\r\n\t(<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t                                if ((this as any)._initializeAdapters) {\r\n\t                                    (this as any)._initializeAdapters();\r\n\t                                }\r\n\t\r\n\t}\r\n\tprotected _provideImplementation(i: any) {\r\n\t    this._implementation = i;\r\n\t    (<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t                                if ((this as any)._initializeAdapters) {\r\n\t                                    (this as any)._initializeAdapters();\r\n\t                                }\r\n\t\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    if ((this as any).findEphemera) {\r\n\t        if (name && name.indexOf(\"@@e:\") == 0) {\r\n\t            return (this as any).findEphemera(name);\r\n\t        }\r\n\t    }\r\n\t\r\n\t\r\n\t        return null;\r\n\t    }\r\n\tpublic setNativeElement(element: any) {\r\n\t\tthis.i.setNativeElement(element);\r\n\t}\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Enum, ValueType, markEnum, Type } from \"igniteui-core/type\";\r\n\r\nexport enum DockManagerShowHeaderIconOnHover {\r\n\tCloseOnly = 0,\r\n\tMoreOptionsOnly = 1,\r\n\tAll = 2\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport let DockManagerShowHeaderIconOnHover_$type = markEnum('DockManagerShowHeaderIconOnHover', 'CloseOnly,0|MoreOptionsOnly,1|All,2');\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { BaseElement } from \"./BaseElement\";\r\nimport { WCNativeHelper } from \"./WCNativeHelper\";\r\nimport { Base, Type, markType } from \"igniteui-core/type\";\r\nimport { DragService } from \"./DragService\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class TabHeaderElement extends BaseElement {\r\n\tstatic $t: Type = markType(TabHeaderElement, 'TabHeaderElement', (<any>BaseElement).$);\r\n\tprivate b: WCNativeHelper = new WCNativeHelper();\r\n\tprotected get c(): WCNativeHelper {\r\n\t\treturn this.b;\r\n\t}\r\n\tprivate d: any = null;\r\n\tprotected get nativeElement(): any {\r\n\t\treturn this.d;\r\n\t}\r\n\tprotected set nativeElement(a: any) {\r\n\t\tthis.d = a;\r\n\t\tthis.b.o = this.d;\r\n\t}\r\n\tsetNativeElement(a: any): void {\r\n\t\tthis.nativeElement = a;\r\n\t}\r\n\tget a(): DragService {\r\n\t\tlet ret_ = this.c.m(\"dragService\", (a: any) => new DragService());\r\n\t\treturn <DragService>ret_;\r\n\t}\r\n\tset a(a: DragService) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.c.v(\"dragService\", value_);\r\n\t}\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { IgcDragService } from \"./igc-drag-service\";\r\nimport { TabHeaderElement as TabHeaderElement_internal } from \"./TabHeaderElement\";\r\n\r\n/**\r\n * Describes a tab header element.\r\n*/\r\nexport class IgcTabHeaderElement\r\n{\r\n\r\nprotected createImplementation() : TabHeaderElement_internal\r\n{\r\n\treturn new TabHeaderElement_internal();\r\n}\r\n\tprotected _implementation: any;\r\n\t                            /**\r\n\t                             * @hidden \r\n\t                             */\r\n\tpublic get i() : TabHeaderElement_internal {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tprivate onImplementationCreated() {\r\n\t\t\r\n\t}\r\n\tconstructor() {\r\n\tthis._implementation = this.createImplementation();\r\n\t(<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t                                if ((this as any)._initializeAdapters) {\r\n\t                                    (this as any)._initializeAdapters();\r\n\t                                }\r\n\t\r\n\t}\r\n\tprotected _provideImplementation(i: any) {\r\n\t    this._implementation = i;\r\n\t    (<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t                                if ((this as any)._initializeAdapters) {\r\n\t                                    (this as any)._initializeAdapters();\r\n\t                                }\r\n\t\r\n\t}\r\n\t/**\r\n\t * Gets/sets the drag service.\r\n\t*/\r\n\tget dragService() : IgcDragService {\r\n\t                                        const r = this.i.a;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = new IgcDragService();\r\n\t                                            if ((r as any).$type) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            } else {\r\n\t                                                if ((e.i as any).setNativeElement) {\r\n\t                                                    (e.i as any).setNativeElement(r);\r\n\t                                                }\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset dragService(v: IgcDragService) {\r\n\t\tv == null ? this.i.a = null : this.i.a = v.i;\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    if ((this as any).findEphemera) {\r\n\t        if (name && name.indexOf(\"@@e:\") == 0) {\r\n\t            return (this as any).findEphemera(name);\r\n\t        }\r\n\t    }\r\n\t\r\n\tif (this.dragService && (this.dragService as any).name && (this.dragService as any).name == name) { return this.dragService; }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\tpublic setNativeElement(element: any) {\r\n\t\tthis.i.setNativeElement(element);\r\n\t}\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\n\r\nimport { IgcTabHeaderElement } from './igc-tab-header-element';\r\nimport { TabHeaderElement } from './TabHeaderElement';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcTabHeaderElementModule {\r\n    public static register(): void {\r\n        \r\n        TypeRegistrar.registerCons(\"IgcTabHeaderElement\", IgcTabHeaderElement);\r\n        TypeRegistrar.register(\"TabHeaderElement\", (<any>TabHeaderElement).$type);\r\n    }\r\n}\r\n","import { IgCollection } from 'igniteui-core/IgCollection';\r\nimport { markType } from 'igniteui-core/type';\r\nimport { SyncableObservableCollection$2 } from 'igniteui-core/SyncableObservableCollection$2';\r\nimport { SyncableObservableCollection$1 } from 'igniteui-core/SyncableObservableCollection$1';\r\n\r\nimport { SplitPane as SplitPane_internal } from './SplitPane';\r\nimport { IgcSplitPaneComponent as IgcSplitPaneComponent } from './igc-split-pane-component';\r\n\r\nexport class IgcSplitPaneCollection extends IgCollection<IgcSplitPaneComponent, SplitPane_internal> {\r\n    constructor(list?: IgcSplitPaneComponent[]) {\r\n        super();\r\n        if (!(IgcSplitPaneComponent as any).$type) {\r\n            (IgcSplitPaneComponent as any).$type = markType(IgcSplitPaneComponent, \"IgcSplitPaneComponent\");\r\n        }\r\n        if (list) {\r\n            for (let i = 0; i < list.length; i++) {\r\n                this.add(list[i]);\r\n            }\r\n        }\r\n    }\r\n    \r\n    protected _createInnerColl(): SyncableObservableCollection$2<IgcSplitPaneComponent, SplitPane_internal> {\r\n        if (!(IgcSplitPaneComponent as any).$type) {\r\n            (IgcSplitPaneComponent as any).$type = markType(IgcSplitPaneComponent, \"IgcSplitPaneComponent\");\r\n        }\r\n        let coll = new SyncableObservableCollection$2<IgcSplitPaneComponent, SplitPane_internal>((IgcSplitPaneComponent as any).$type, (SplitPane_internal as any).$type, 0);\r\n        coll.compare = (ext, int) => { \r\n            let comp: any = ext;\r\n            if (comp._implementation) {\r\n                comp = comp._implementation;\r\n            }\r\n            if (comp.equals) {\r\n                return comp.equals(int);\r\n            }\r\n            return comp === int;\r\n        };\r\n        coll.createTo = (ext) => {\r\n            return (ext as any)._implementation;\r\n        }\r\n        coll.createFrom = (int) => {\r\n            let ext = (int as any).externalObject;\r\n            if (!ext) {\r\n                ext = new IgcSplitPaneComponent();\r\n\r\n                if (ext) {\r\n                    (ext as any)._implementation = int;\r\n                }\r\n            }\r\n            return ext;\r\n        }\r\n        return coll;\r\n    } \r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { ObservableCollection$1 } from \"igniteui-core/ObservableCollection$1\";\r\nimport { SplitPane } from \"./SplitPane\";\r\nimport { Base, Type, markType } from \"igniteui-core/type\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class SplitPaneCollection extends ObservableCollection$1<SplitPane> {\r\n\tstatic $t: Type = markType(SplitPaneCollection, 'SplitPaneCollection', (<any>ObservableCollection$1).$.specialize((<any>SplitPane).$));\r\n\tconstructor() {\r\n\t\tsuper((<any>SplitPane).$, 0);\r\n\t}\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Base, Type, markType } from \"igniteui-core/type\";\r\nimport { WCNativeHelper } from \"./WCNativeHelper\";\r\nimport { SplitPane } from \"./SplitPane\";\r\nimport { SplitPaneCollection } from \"./SplitPaneCollection\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class DockManagerLayout extends Base {\r\n\tstatic $t: Type = markType(DockManagerLayout, 'DockManagerLayout');\r\n\tget h(): string {\r\n\t\tlet ret_ = this.d.n(\"name\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset h(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.d.v(\"name\", value_);\r\n\t}\r\n\tprivate ___mustPassByValue: boolean = true;\r\n\tprivate c: WCNativeHelper = new WCNativeHelper();\r\n\tprotected get d(): WCNativeHelper {\r\n\t\treturn this.c;\r\n\t}\r\n\tprivate f: any = null;\r\n\tprotected get nativeElement(): any {\r\n\t\treturn this.f;\r\n\t}\r\n\tprotected set nativeElement(a: any) {\r\n\t\tthis.f = a;\r\n\t\tthis.c.o = this.f;\r\n\t}\r\n\tsetNativeElement(a: any): void {\r\n\t\tthis.nativeElement = a;\r\n\t}\r\n\tget a(): SplitPane {\r\n\t\tlet ret_ = this.d.m(\"rootPane\", (a: any) => new SplitPane());\r\n\t\treturn <SplitPane>ret_;\r\n\t}\r\n\tset a(a: SplitPane) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.d.v(\"rootPane\", value_);\r\n\t}\r\n\tget b(): SplitPaneCollection {\r\n\t\tlet ret_ = this.d.k(\"floatingPanes\", (a: any) => new SplitPaneCollection(), (a: any) => new SplitPane());\r\n\t\treturn <SplitPaneCollection>ret_;\r\n\t}\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { IgcSplitPaneComponent } from \"./igc-split-pane-component\";\r\nimport { IgcSplitPaneCollection } from \"./igc-split-pane-collection\";\r\nimport { DockManagerLayout as DockManagerLayout_internal } from \"./DockManagerLayout\";\r\nimport { SplitPaneCollection as SplitPaneCollection_internal } from \"./SplitPaneCollection\";\r\nimport { SplitPane } from \"./SplitPane\";\r\nimport { SyncableObservableCollection$1 } from \"igniteui-core/SyncableObservableCollection$1\";\r\n\r\n/**\r\n * Describes a Dock Manager layout.\r\n*/\r\nexport class IgcDockManagerLayout\r\n{\r\n\r\nprotected createImplementation() : DockManagerLayout_internal\r\n{\r\n\treturn new DockManagerLayout_internal();\r\n}\r\n\tprotected _implementation: any;\r\n\t                            /**\r\n\t                             * @hidden \r\n\t                             */\r\n\tpublic get i() : DockManagerLayout_internal {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tprivate onImplementationCreated() {\r\n\t\t\r\n\t}\r\n\tconstructor() {\r\n\tthis._implementation = this.createImplementation();\r\n\t(<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t                                if ((this as any)._initializeAdapters) {\r\n\t                                    (this as any)._initializeAdapters();\r\n\t                                }\r\n\t\r\n\t}\r\n\tprotected _provideImplementation(i: any) {\r\n\t    this._implementation = i;\r\n\t    (<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t                                if ((this as any)._initializeAdapters) {\r\n\t                                    (this as any)._initializeAdapters();\r\n\t                                }\r\n\t\r\n\t}\r\n\tget name() : string {\r\n\t\treturn (this.i.h as string);\r\n\t}\r\n\tset name(v: string) {\r\n\t\tthis.i.h = v;\r\n\t}\r\n\t/**\r\n\t * The root split pane of the layout.\r\n\t*/\r\n\tget rootPane() : IgcSplitPaneComponent {\r\n\t                                        const r = this.i.a;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = IgcSplitPaneComponent._createFromInternal(r);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset rootPane(v: IgcSplitPaneComponent) {\r\n\t\tv == null ? this.i.a = null : this.i.a = v.i;\r\n\t}\r\n\tprivate _floatingPanes: IgcSplitPaneCollection = null;\r\n\t                                \r\n\t/**\r\n\t * The floating panes of the layout.\r\n\t*/\r\n\tget floatingPanes() : IgcSplitPaneCollection {\r\n\t                                        if (this._floatingPanes === null) {\r\n\t                                            let coll = new IgcSplitPaneCollection();\r\n\t                                            let innerColl = this.i.b;\r\n\t\t\tif (!innerColl) {\r\n\t                                            \tinnerColl = new SplitPaneCollection_internal();\r\n\t\t\t}\r\n\t                                            this._floatingPanes = (coll as any)._fromInner(innerColl);\r\n\t                                            \r\n\t                                        }\r\n\t\treturn this._floatingPanes;\r\n\t}\r\n\tset floatingPanes(v: IgcSplitPaneCollection) {\r\n\t                                        if (this._floatingPanes !== null) {\r\n\t                                            (this._floatingPanes as any)._setSyncTarget(null);\r\n\t                                            this._floatingPanes = null;\r\n\t                                        }\r\n\t                                        let coll = new IgcSplitPaneCollection();\r\n\t                                        this._floatingPanes = (coll as any)._fromOuter(v);\r\n\t                                        let syncColl = new SyncableObservableCollection$1<SplitPane>((SplitPane as any).$type);\r\n\t                                        let innerColl = this.i.b;\r\n\t\tif (!innerColl) {\r\n\t                                        \tinnerColl = new SplitPaneCollection_internal();\r\n\t\t}\r\n\t                                        (syncColl as any)._inner = innerColl;\r\n\t                                        syncColl.clear();\r\n\t                                        (this._floatingPanes as any)._setSyncTarget(syncColl);\r\n\t                                        \r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    if ((this as any).findEphemera) {\r\n\t        if (name && name.indexOf(\"@@e:\") == 0) {\r\n\t            return (this as any).findEphemera(name);\r\n\t        }\r\n\t    }\r\n\t\r\n\tif (this.rootPane && (this.rootPane as any).name && (this.rootPane as any).name == name) { return this.rootPane; }\r\n\tif (this.floatingPanes != null && this.floatingPanes.findByName && this.floatingPanes.findByName(name)) { return this.floatingPanes.findByName(name); }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\tpublic setNativeElement(element: any) {\r\n\t\tthis.i.setNativeElement(element);\r\n\t}\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Base, Type, markType } from \"igniteui-core/type\";\r\nimport { WCNativeHelper } from \"./WCNativeHelper\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class DockManagerResourceStrings extends Base {\r\n\tstatic $t: Type = markType(DockManagerResourceStrings, 'DockManagerResourceStrings');\r\n\tprivate a: WCNativeHelper = new WCNativeHelper();\r\n\tprotected get b(): WCNativeHelper {\r\n\t\treturn this.a;\r\n\t}\r\n\tprivate c: any = null;\r\n\tprotected get nativeElement(): any {\r\n\t\treturn this.c;\r\n\t}\r\n\tprotected set nativeElement(a: any) {\r\n\t\tthis.c = a;\r\n\t\tthis.a.o = this.c;\r\n\t}\r\n\tsetNativeElement(a: any): void {\r\n\t\tthis.nativeElement = a;\r\n\t}\r\n\tget e(): string {\r\n\t\tlet ret_ = this.b.n(\"close\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset e(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.b.v(\"close\", value_);\r\n\t}\r\n\tget l(): string {\r\n\t\tlet ret_ = this.b.n(\"pin\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset l(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.b.v(\"pin\", value_);\r\n\t}\r\n\tget m(): string {\r\n\t\tlet ret_ = this.b.n(\"unpin\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset m(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.b.v(\"unpin\", value_);\r\n\t}\r\n\tget g(): string {\r\n\t\tlet ret_ = this.b.n(\"maximize\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset g(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.b.v(\"maximize\", value_);\r\n\t}\r\n\tget h(): string {\r\n\t\tlet ret_ = this.b.n(\"minimize\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset h(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.b.v(\"minimize\", value_);\r\n\t}\r\n\tget i(): string {\r\n\t\tlet ret_ = this.b.n(\"moreOptions\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset i(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.b.v(\"moreOptions\", value_);\r\n\t}\r\n\tget j(): string {\r\n\t\tlet ret_ = this.b.n(\"moreTabs\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset j(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.b.v(\"moreTabs\", value_);\r\n\t}\r\n\tget k(): string {\r\n\t\tlet ret_ = this.b.n(\"panes\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset k(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.b.v(\"panes\", value_);\r\n\t}\r\n\tget f(): string {\r\n\t\tlet ret_ = this.b.n(\"documents\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset f(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.b.v(\"documents\", value_);\r\n\t}\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { DockManagerResourceStrings as DockManagerResourceStrings_internal } from \"./DockManagerResourceStrings\";\r\n\r\n/**\r\n * Describes dock manager resource strings.\r\n*/\r\nexport class IgcDockManagerResourceStrings\r\n{\r\n\r\nprotected createImplementation() : DockManagerResourceStrings_internal\r\n{\r\n\treturn new DockManagerResourceStrings_internal();\r\n}\r\n\tprotected _implementation: any;\r\n\t                            /**\r\n\t                             * @hidden \r\n\t                             */\r\n\tpublic get i() : DockManagerResourceStrings_internal {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tprivate onImplementationCreated() {\r\n\t\t\r\n\t}\r\n\tconstructor() {\r\n\tthis._implementation = this.createImplementation();\r\n\t(<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t                                if ((this as any)._initializeAdapters) {\r\n\t                                    (this as any)._initializeAdapters();\r\n\t                                }\r\n\t\r\n\t}\r\n\tprotected _provideImplementation(i: any) {\r\n\t    this._implementation = i;\r\n\t    (<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t                                if ((this as any)._initializeAdapters) {\r\n\t                                    (this as any)._initializeAdapters();\r\n\t                                }\r\n\t\r\n\t}\r\n\tget close() : string {\r\n\t\treturn (this.i.e as string);\r\n\t}\r\n\tset close(v: string) {\r\n\t\tthis.i.e = v;\r\n\t}\r\n\tget pin() : string {\r\n\t\treturn (this.i.l as string);\r\n\t}\r\n\tset pin(v: string) {\r\n\t\tthis.i.l = v;\r\n\t}\r\n\tget unpin() : string {\r\n\t\treturn (this.i.m as string);\r\n\t}\r\n\tset unpin(v: string) {\r\n\t\tthis.i.m = v;\r\n\t}\r\n\tget maximize() : string {\r\n\t\treturn (this.i.g as string);\r\n\t}\r\n\tset maximize(v: string) {\r\n\t\tthis.i.g = v;\r\n\t}\r\n\tget minimize() : string {\r\n\t\treturn (this.i.h as string);\r\n\t}\r\n\tset minimize(v: string) {\r\n\t\tthis.i.h = v;\r\n\t}\r\n\tget moreOptions() : string {\r\n\t\treturn (this.i.i as string);\r\n\t}\r\n\tset moreOptions(v: string) {\r\n\t\tthis.i.i = v;\r\n\t}\r\n\tget moreTabs() : string {\r\n\t\treturn (this.i.j as string);\r\n\t}\r\n\tset moreTabs(v: string) {\r\n\t\tthis.i.j = v;\r\n\t}\r\n\tget panes() : string {\r\n\t\treturn (this.i.k as string);\r\n\t}\r\n\tset panes(v: string) {\r\n\t\tthis.i.k = v;\r\n\t}\r\n\tget documents() : string {\r\n\t\treturn (this.i.f as string);\r\n\t}\r\n\tset documents(v: string) {\r\n\t\tthis.i.f = v;\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    if ((this as any).findEphemera) {\r\n\t        if (name && name.indexOf(\"@@e:\") == 0) {\r\n\t            return (this as any).findEphemera(name);\r\n\t        }\r\n\t    }\r\n\t\r\n\t\r\n\t        return null;\r\n\t    }\r\n\tpublic setNativeElement(element: any) {\r\n\t\tthis.i.setNativeElement(element);\r\n\t}\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Base, Type, markType } from \"igniteui-core/type\";\r\nimport { DockManagerLayout } from \"./DockManagerLayout\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class LayoutChangeEventArgs extends Base {\r\n\tstatic $t: Type = markType(LayoutChangeEventArgs, 'LayoutChangeEventArgs');\r\n\ta: DockManagerLayout = null;\r\n\tstatic b(a: any): LayoutChangeEventArgs {\r\n\t\treturn ((() => {\r\n\t\t\tlet $ret = new LayoutChangeEventArgs();\r\n\t\t\t$ret.a = <DockManagerLayout>a;\r\n\t\t\treturn $ret;\r\n\t\t})());\r\n\t}\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { IgcDockManagerLayout } from \"./igc-dock-manager-layout\";\r\nimport { LayoutChangeEventArgs as LayoutChangeEventArgs_internal } from \"./LayoutChangeEventArgs\";\r\n\r\nexport class IgcLayoutChangeEventArgs\r\n{\r\n\r\nprotected createImplementation() : LayoutChangeEventArgs_internal\r\n{\r\n\treturn new LayoutChangeEventArgs_internal();\r\n}\r\n\tprotected _implementation: any;\r\n\t                            /**\r\n\t                             * @hidden \r\n\t                             */\r\n\tpublic get i() : LayoutChangeEventArgs_internal {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tprivate onImplementationCreated() {\r\n\t\t\r\n\t}\r\n\tconstructor() {\r\n\tthis._implementation = this.createImplementation();\r\n\t(<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t                                if ((this as any)._initializeAdapters) {\r\n\t                                    (this as any)._initializeAdapters();\r\n\t                                }\r\n\t\r\n\t}\r\n\tprotected _provideImplementation(i: any) {\r\n\t    this._implementation = i;\r\n\t    (<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t                                if ((this as any)._initializeAdapters) {\r\n\t                                    (this as any)._initializeAdapters();\r\n\t                                }\r\n\t\r\n\t}\r\n\tget detail() : IgcDockManagerLayout {\r\n\t                                        const r = this.i.a;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = new IgcDockManagerLayout();\r\n\t                                            if ((r as any).$type) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            } else {\r\n\t                                                if ((e.i as any).setNativeElement) {\r\n\t                                                    (e.i as any).setNativeElement(r);\r\n\t                                                }\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset detail(v: IgcDockManagerLayout) {\r\n\t\tv == null ? this.i.a = null : this.i.a = v.i;\r\n\t}\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { BaseElement } from \"./BaseElement\";\r\nimport { WCNativeHelper } from \"./WCNativeHelper\";\r\nimport { Base, enumGetBox, EnumUtil, Type, markType } from \"igniteui-core/type\";\r\nimport { DockManagerLayout } from \"./DockManagerLayout\";\r\nimport { DockManagerPane } from \"./DockManagerPane\";\r\nimport { DockManagerPoint } from \"./DockManagerPoint\";\r\nimport { ContentPane } from \"./ContentPane\";\r\nimport { DockManagerShowHeaderIconOnHover, DockManagerShowHeaderIconOnHover_$type } from \"./DockManagerShowHeaderIconOnHover\";\r\nimport { DockManagerResourceStrings } from \"./DockManagerResourceStrings\";\r\nimport { LayoutChangeEventArgs } from \"./LayoutChangeEventArgs\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class DockManager extends BaseElement {\r\n\tstatic $t: Type = markType(DockManager, 'DockManager', (<any>BaseElement).$);\r\n\tlayoutChange: (sender: any, args: LayoutChangeEventArgs) => void = null;\r\n\tlayoutChangeChanged(): void {\r\n\t\tif (this.layoutChange != null) {\r\n\t\t\tthis.j.r(\"layoutChange\", (a: any) => this.layoutChange(this, LayoutChangeEventArgs.b(this.b)), false);\r\n\t\t} else {\r\n\t\t\tthis.j.u(\"layoutChange\");\r\n\t\t}\r\n\t}\r\n\tprivate i: WCNativeHelper = new WCNativeHelper();\r\n\tprotected get j(): WCNativeHelper {\r\n\t\treturn this.i;\r\n\t}\r\n\tprivate o: any = null;\r\n\tprotected get nativeElement(): any {\r\n\t\treturn this.o;\r\n\t}\r\n\tprotected set nativeElement(a: any) {\r\n\t\tthis.o = a;\r\n\t\tthis.i.o = this.o;\r\n\t}\r\n\tsetNativeElement(a: any): void {\r\n\t\tthis.nativeElement = a;\r\n\t}\r\n\tget b(): DockManagerLayout {\r\n\t\tlet ret_ = this.j.m(\"layout\", (a: any) => new DockManagerLayout());\r\n\t\treturn <DockManagerLayout>ret_;\r\n\t}\r\n\tset b(a: DockManagerLayout) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.j.v(\"layout\", value_);\r\n\t}\r\n\tget c(): DockManagerPane {\r\n\t\tlet ret_ = this.j.m(\"draggedPane\", (a: any) => DockManagerPane.createFromNative(a));\r\n\t\treturn <DockManagerPane>ret_;\r\n\t}\r\n\tset c(a: DockManagerPane) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.j.v(\"draggedPane\", value_);\r\n\t}\r\n\tget e(): DockManagerPoint {\r\n\t\tlet ret_ = this.j.m(\"dropPosition\", (a: any) => new DockManagerPoint());\r\n\t\treturn <DockManagerPoint>ret_;\r\n\t}\r\n\tset e(a: DockManagerPoint) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.j.v(\"dropPosition\", value_);\r\n\t}\r\n\tget a(): ContentPane {\r\n\t\tlet ret_ = this.j.m(\"activePane\", (a: any) => new ContentPane());\r\n\t\treturn <ContentPane>ret_;\r\n\t}\r\n\tset a(a: ContentPane) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.j.v(\"activePane\", value_);\r\n\t}\r\n\tget m(): boolean {\r\n\t\tlet ret_ = this.j.n(\"allowMaximize\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset m(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.j.v(\"allowMaximize\", value_);\r\n\t}\r\n\tget g(): DockManagerShowHeaderIconOnHover {\r\n\t\tlet ret_ = this.j.n(\"showHeaderIconOnHover\");\r\n\t\tret_ = enumGetBox<DockManagerShowHeaderIconOnHover>(DockManagerShowHeaderIconOnHover_$type, EnumUtil.getEnumValue<DockManagerShowHeaderIconOnHover>(DockManagerShowHeaderIconOnHover_$type, this.j.f<DockManagerShowHeaderIconOnHover>(DockManagerShowHeaderIconOnHover_$type, ret_)));\r\n\t\treturn EnumUtil.getEnumValue<DockManagerShowHeaderIconOnHover>(DockManagerShowHeaderIconOnHover_$type, ret_);\r\n\t}\r\n\tset g(a: DockManagerShowHeaderIconOnHover) {\r\n\t\tlet value_ = <any>enumGetBox<DockManagerShowHeaderIconOnHover>(DockManagerShowHeaderIconOnHover_$type, a);\r\n\t\tvalue_ = WCNativeHelper.p(value_.toString());\r\n\t\tthis.j.v(\"showHeaderIconOnHover\", value_);\r\n\t}\r\n\tget d(): DockManagerPane {\r\n\t\tlet ret_ = this.j.m(\"maximizedPane\", (a: any) => DockManagerPane.createFromNative(a));\r\n\t\treturn <DockManagerPane>ret_;\r\n\t}\r\n\tset d(a: DockManagerPane) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.j.v(\"maximizedPane\", value_);\r\n\t}\r\n\tget f(): DockManagerResourceStrings {\r\n\t\tlet ret_ = this.j.m(\"resourceStrings\", (a: any) => new DockManagerResourceStrings());\r\n\t\treturn <DockManagerResourceStrings>ret_;\r\n\t}\r\n\tset f(a: DockManagerResourceStrings) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.j.v(\"resourceStrings\", value_);\r\n\t}\r\n\tget k(): boolean {\r\n\t\tlet ret_ = this.j.n(\"allowFloatingPanesResize\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset k(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.j.v(\"allowFloatingPanesResize\", value_);\r\n\t}\r\n\tget n(): boolean {\r\n\t\tlet ret_ = this.j.n(\"disableKeyboardNavigation\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset n(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.j.v(\"disableKeyboardNavigation\", value_);\r\n\t}\r\n\tget l(): boolean {\r\n\t\tlet ret_ = this.j.n(\"allowInnerDock\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset l(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.j.v(\"allowInnerDock\", value_);\r\n\t}\r\n\tq(a: string): void {\r\n\t\tthis.nativeElement.focusPane(this.j.i(a));\r\n\t}\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { IgcDockManagerLayout } from \"./igc-dock-manager-layout\";\r\nimport { IgcDockManagerPaneComponent } from \"./igc-dock-manager-pane-component\";\r\nimport { IgcDockManagerPoint } from \"./igc-dock-manager-point\";\r\nimport { IgcContentPaneComponent } from \"./igc-content-pane-component\";\r\nimport { DockManagerShowHeaderIconOnHover, DockManagerShowHeaderIconOnHover_$type } from \"./DockManagerShowHeaderIconOnHover\";\r\nimport { IgcDockManagerResourceStrings } from \"./igc-dock-manager-resource-strings\";\r\nimport { IgcLayoutChangeEventArgs } from \"./igc-layout-change-event-args\";\r\nimport { DockManager } from \"./DockManager\";\r\nimport { TypeRegistrar } from \"igniteui-core/type\";\r\nimport { NamePatcher, getAllPropertyNames, fromSpinal, toSpinal, ensureBool, ensureEnum, enumToString, initializePropertiesFromCss } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\n\r\n/**\r\n * Describes a Dock Manager component.\r\n*/\r\nexport class IgcDockManagerComponent\r\n{\r\n\r\nprotected createImplementation() : DockManager\r\n{\r\n\treturn new DockManager();\r\n}\r\n\tprotected _implementation: any;\r\n\t                            /**\r\n\t                             * @hidden \r\n\t                             */\r\n\tpublic get i() : DockManager {\r\n\treturn this._implementation;\r\n\t}/**\r\n\t                             * @hidden \r\n\t                             */\r\n\tstatic _createFromInternal(internal: any) : IgcDockManagerComponent {\r\n\t    if (!internal) {\r\n\t                                    return null;\r\n\t                                }\r\n\t                                if (!internal.$type) {\r\n\t                                    return null;\r\n\t                                }\r\n\t                                let name = internal.$type.name;\r\n\t                                let externalName = \"Igc\" + name + \"Component\";\r\n\t                                if (!TypeRegistrar.isRegistered(externalName)) {\r\n\t                                    return null;\r\n\t                                }\r\n\t                                return TypeRegistrar.create(externalName);\r\n\t                            }\r\n\tprivate onImplementationCreated() {\r\n\t\t\r\n\t}\r\n\tconstructor() {\r\n\t                                    \r\n\t                                    if ((this as any)._styling) {\r\n\t                                        NamePatcher.ensureStylablePatched(Object.getPrototypeOf(this));\r\n\t                                    }\r\n\t\tthis._implementation = this.createImplementation();\r\n\t\t(<any>this._implementation).externalObject = this;\r\n\t\tthis.onImplementationCreated();\r\n\t                                if ((this as any)._initializeAdapters) {\r\n\t                                    (this as any)._initializeAdapters();\r\n\t                                }\r\n\t\r\n\t}\r\n\tprivate _settingAttributes: boolean = false;\r\n\t                                protected _attached: boolean = false;\r\n\t                                    \r\n\t                                private _queuedSetAttributes: { attrName: string, attrValue: string }[] = [];\r\n\t                                protected _enqueueSetAttribute(attrName: string, attrValue: string) {\r\n\t                                     this._queuedSetAttributes.push({ attrName: attrName, attrValue: attrValue });\r\n\t                                }\r\n\t\r\n\t                                protected _flushQueuedAttributes() {\r\n\t                                    this._settingAttributes = true;\r\n\t                                    for (let i = 0; i < this._queuedSetAttributes.length; i++) {\r\n\t                                        this.setAttribute(\r\n\t                                            this._queuedSetAttributes[i].attrName,\r\n\t                                            this._queuedSetAttributes[i].attrValue);\r\n\t                                    }\r\n\t                                    this._settingAttributes = false;\r\n\t                                    this._queuedSetAttributes.length = 0;\r\n\t                                }\r\n\t                                protected _a(attrName: string, attrValue: any) {\r\n\t                                    if (this._updatingFromAttribute) {\r\n\treturn;\r\n\t    }\r\n\t                                    if (attrValue) {\r\n\t                                        attrValue = attrValue.toString();\r\n\t                                    }\r\n\t                                    this._settingAttributes = true;\r\n\t                                    attrName = toSpinal(attrName);\r\n\t                                    if (this._attached) {\r\n\t                                        this.setAttribute(attrName, attrValue);\r\n\t                                    } else { \r\n\t                                        this._enqueueSetAttribute(attrName, attrValue);\r\n\t                                    }\r\n\t                                    this._settingAttributes = false;\r\n\t    }\r\n\t\r\n\t                                protected setAttribute(attrName: string, attrValue: string) {\r\n\t\r\n\t                                }\r\n\t\r\n\t                \r\n\t                private _updatingFromAttribute: boolean = false;\r\n\t                attributeChangedCallback(name: string, oldValue: string, newValue: string) {\r\n\t                    if (this._settingAttributes) {\r\n\t                        return;\r\n\t                    }\r\n\t                    let setName = fromSpinal(name);\r\n\t                    this._updatingFromAttribute = true;\r\n\t                    (<any>this)[setName] = newValue;\r\n\t                    this._updatingFromAttribute = false;\r\n\t                }\r\n\t\r\n\t                public static register() { }\r\n\t/**\r\n\t * Gets/sets the layout configuration of the Dock Manager.\r\n\t*/\r\n\tget layout() : IgcDockManagerLayout {\r\n\t                                        const r = this.i.b;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = new IgcDockManagerLayout();\r\n\t                                            if ((r as any).$type) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            } else {\r\n\t                                                if ((e.i as any).setNativeElement) {\r\n\t                                                    (e.i as any).setNativeElement(r);\r\n\t                                                }\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset layout(v: IgcDockManagerLayout) {\r\n\t\tv == null ? this.i.b = null : this.i.b = v.i;\r\n\t}\r\n\t/**\r\n\t * Gets/sets the currently dragged pane.\r\n\t*/\r\n\tget draggedPane() : IgcDockManagerPaneComponent {\r\n\t                                        const r = this.i.c;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = IgcDockManagerPaneComponent._createFromInternal(r);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset draggedPane(v: IgcDockManagerPaneComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.c = null : this.i.c = v.i;\r\n\t}\r\n\t/**\r\n\t * Gets/sets the current drop position when performing custom drag/drop.\r\n\t*/\r\n\tget dropPosition() : IgcDockManagerPoint {\r\n\t                                        const r = this.i.e;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = new IgcDockManagerPoint();\r\n\t                                            if ((r as any).$type) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            } else {\r\n\t                                                if ((e.i as any).setNativeElement) {\r\n\t                                                    (e.i as any).setNativeElement(r);\r\n\t                                                }\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset dropPosition(v: IgcDockManagerPoint) {\r\n\t\tv == null ? this.i.e = null : this.i.e = v.i;\r\n\t}\r\n\t/**\r\n\t * Gets/sets the active pane of the Dock Manager.\r\n\t*/\r\n\tget activePane() : IgcContentPaneComponent {\r\n\t                                        const r = this.i.a;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = IgcContentPaneComponent._createFromInternal(r);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset activePane(v: IgcContentPaneComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.a = null : this.i.a = v.i;\r\n\t}\r\n\t/**\r\n\t * Determines whether the end user is allowed to maximize panes. Defaults to true.\r\n\t*/\r\n\tget allowMaximize() : boolean {\r\n\t\treturn (this.i.m as boolean);\r\n\t}\r\n\tset allowMaximize(v: boolean) {\r\n\t\tthis.i.m = ensureBool(v);\r\n\t                                        this._a(\"allowMaximize\", this.i.m);\r\n\t}\r\n\t/**\r\n\t * Determines which tab header icons should show when hovering over the tab with the mouse. Defaults to undefined.\r\n\t*/\r\n\tget showHeaderIconOnHover() : DockManagerShowHeaderIconOnHover {\r\n\t\treturn this.i.g;\r\n\t}\r\n\tset showHeaderIconOnHover(v: DockManagerShowHeaderIconOnHover) {\r\n\t\tthis.i.g = ensureEnum<DockManagerShowHeaderIconOnHover>(DockManagerShowHeaderIconOnHover_$type, v);\r\n\t                                        this._a(\"showHeaderIconOnHover\", enumToString<DockManagerShowHeaderIconOnHover>(DockManagerShowHeaderIconOnHover_$type, this.i.g));\r\n\t}\r\n\t/**\r\n\t * Gets/sets the maximized pane.\r\n\t*/\r\n\tget maximizedPane() : IgcDockManagerPaneComponent {\r\n\t                                        const r = this.i.d;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = IgcDockManagerPaneComponent._createFromInternal(r);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset maximizedPane(v: IgcDockManagerPaneComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.d = null : this.i.d = v.i;\r\n\t}\r\n\t/**\r\n\t * Gets/sets the resource strings.\r\n\t*/\r\n\tget resourceStrings() : IgcDockManagerResourceStrings {\r\n\t                                        const r = this.i.f;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = new IgcDockManagerResourceStrings();\r\n\t                                            if ((r as any).$type) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            } else {\r\n\t                                                if ((e.i as any).setNativeElement) {\r\n\t                                                    (e.i as any).setNativeElement(r);\r\n\t                                                }\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset resourceStrings(v: IgcDockManagerResourceStrings) {\r\n\t\tv == null ? this.i.f = null : this.i.f = v.i;\r\n\t}\r\n\t/**\r\n\t * Determines whether the end user is allowed to resize floating panes. Defaults to true.\r\n\t*/\r\n\tget allowFloatingPanesResize() : boolean {\r\n\t\treturn (this.i.k as boolean);\r\n\t}\r\n\tset allowFloatingPanesResize(v: boolean) {\r\n\t\tthis.i.k = ensureBool(v);\r\n\t                                        this._a(\"allowFloatingPanesResize\", this.i.k);\r\n\t}\r\n\t/**\r\n\t * Disables the built-in keyboard shortcuts for pane navigation. Defaults to false.\r\n\t*/\r\n\tget disableKeyboardNavigation() : boolean {\r\n\t\treturn (this.i.n as boolean);\r\n\t}\r\n\tset disableKeyboardNavigation(v: boolean) {\r\n\t\tthis.i.n = ensureBool(v);\r\n\t                                        this._a(\"disableKeyboardNavigation\", this.i.n);\r\n\t}\r\n\t/**\r\n\t * Determines whether the end user is allowed to inner dock panes. Defaults to true.\r\n\t*/\r\n\tget allowInnerDock() : boolean {\r\n\t\treturn (this.i.l as boolean);\r\n\t}\r\n\tset allowInnerDock(v: boolean) {\r\n\t\tthis.i.l = ensureBool(v);\r\n\t                                        this._a(\"allowInnerDock\", this.i.l);\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    if ((this as any).findEphemera) {\r\n\t        if (name && name.indexOf(\"@@e:\") == 0) {\r\n\t            return (this as any).findEphemera(name);\r\n\t        }\r\n\t    }\r\n\t\r\n\tif (this.layout && (this.layout as any).name && (this.layout as any).name == name) { return this.layout; }\r\n\tif (this.draggedPane && (this.draggedPane as any).name && (this.draggedPane as any).name == name) { return this.draggedPane; }\r\n\tif (this.dropPosition && (this.dropPosition as any).name && (this.dropPosition as any).name == name) { return this.dropPosition; }\r\n\tif (this.activePane && (this.activePane as any).name && (this.activePane as any).name == name) { return this.activePane; }\r\n\tif (this.maximizedPane && (this.maximizedPane as any).name && (this.maximizedPane as any).name == name) { return this.maximizedPane; }\r\n\tif (this.resourceStrings && (this.resourceStrings as any).name && (this.resourceStrings as any).name == name) { return this.resourceStrings; }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\t\r\n\tprotected __p: string = null;\r\n\tprotected _hasUserValues: Set<string> = new Set<string>();\r\n\tprotected get hasUserValues(): Set<string> {\r\n\t    return this._hasUserValues;\r\n\t}\r\n\tprotected __m(propertyName: string) {\r\n\t    if (!this._inStyling) {\r\n\t        this._hasUserValues.add(propertyName);\r\n\t    }\r\n\t}\r\n\t\r\n\tprotected _stylingContainer: any = null;\r\n\tprotected _stylingParent: any = null;\r\n\tprotected _inStyling: boolean = false;\r\n\tprotected _styling(container: any, component: any, parent?: any) {\r\n\t        if (this._inStyling) {\r\n\t            return;\r\n\t        }\r\n\t        this._inStyling = true;\r\n\t        this._stylingContainer = container;\r\n\t        this._stylingParent = component;\r\n\t\t\r\n\t        let genericPrefix = \"\";\r\n\t        let typeName = (this.i as any).$type.name;\r\n\t        if (typeName.indexOf(\"Xam\") === 0) {\r\n\t            typeName = typeName.substring(3);\r\n\t        }\r\n\t        genericPrefix = toSpinal(\"DockManagerComponent\");\r\n\t\t\r\n\t\tlet additionalPrefixes = [];\r\n\t\t\r\n\t\tlet prefix = toSpinal(typeName);\r\n\t\tadditionalPrefixes.push(prefix + \"-\");\r\n\t\r\n\t        let b = (this.i as any).$type.baseType;\r\n\t        while (b && b.name != \"Object\" && \r\n\t            b.name != \"Base\" && \r\n\t            b.name != \"Control\" && \r\n\t            b.Name != \"DependencyObject\" &&\r\n\t            b.Name != \"FrameworkElement\") {\r\n\t            typeName = b.name;\r\n\t            if (typeName.indexOf(\"Xam\") === 0) {\r\n\t                typeName = typeName.substring(3);\r\n\t            }\r\n\t            let basePrefix = toSpinal(typeName);\r\n\t            additionalPrefixes.push(basePrefix + \"-\");\r\n\t            b = b.baseType;\r\n\t        }\r\n\t\t\r\n\t\tif (parent) {\r\n\t\t\tlet parentTypeName = (parent.i as any).$type.name;\r\n\t            if (parentTypeName.indexOf(\"Xam\") === 0) {\r\n\t                parentTypeName = parentTypeName.substring(3);\r\n\t            }\r\n\t            let parentPrefix = toSpinal(parentTypeName);\r\n\t\r\n\t\t\tadditionalPrefixes.push(parentPrefix + \"-\" + genericPrefix + \"-\");\r\n\t\t\tadditionalPrefixes.push(parentPrefix + \"-\" + prefix + \"-\");\r\n\t\t}\r\n\t\r\n\t\tinitializePropertiesFromCss(container, this, genericPrefix + \"-\", this.hasUserValues, false, additionalPrefixes);\r\n\t\r\n\t        if (this.draggedPane && (this.draggedPane as any)._styling) {\r\n\t    (this.draggedPane as any)._styling(container, component, this);\r\n\t}\r\n\tif (this.activePane && (this.activePane as any)._styling) {\r\n\t    (this.activePane as any)._styling(container, component, this);\r\n\t}\r\n\tif (this.maximizedPane && (this.maximizedPane as any)._styling) {\r\n\t    (this.maximizedPane as any)._styling(container, component, this);\r\n\t}\r\n\t\r\n\t\r\n\t        if ((this as any)._otherStyling) {\r\n\t            (this as any)._otherStyling(container, component, parent);\r\n\t        }\r\n\t        this._inStyling = false;\r\n\t}\r\n\tpublic setNativeElement(element: any) {\r\n\t\tthis.i.setNativeElement(element);\r\n\t}\r\n\t/**\r\n\t * Focuses a pane from the layout.\r\n\t\r\n\t*/\r\n\tpublic focusPane(contentId: string) {\r\n\t\tthis.i.q(contentId);\r\n\t}\r\n\t\r\n\t    private _layoutChange: (s: IgcDockManagerComponent, e: IgcLayoutChangeEventArgs) => void = null;\r\n\t    private _layoutChange_wrapped: any = null;\r\n\t\r\n\tpublic get layoutChange(): (s: IgcDockManagerComponent, e: IgcLayoutChangeEventArgs) => void {\r\n\treturn this._layoutChange;\r\n\t}\r\n\t    public set layoutChange(ev: (s: IgcDockManagerComponent, e: IgcLayoutChangeEventArgs) => void) {\r\n\t        if (this._layoutChange_wrapped !== null) {\r\n\t            this.i.layoutChange = delegateRemove(this.i.layoutChange, this._layoutChange_wrapped);\r\n\t            this._layoutChange_wrapped = null;\r\n\t            this._layoutChange = null;\r\n\t        }\r\n\t\r\n\t        this._layoutChange = ev;\r\n\t        this._layoutChange_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcLayoutChangeEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeLayoutChange) {\r\n\t                        (this as any).beforeLayoutChange(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._layoutChange) {\r\n\t    this._layoutChange(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.layoutChange = delegateCombine(this.i.layoutChange, this._layoutChange_wrapped);\r\n\t        if (this.i.layoutChangeChanged) {\r\n\t            this.i.layoutChangeChanged();\r\n\t        }\r\n\t;\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcSplitPaneModule } from './igc-split-pane-module';\r\nimport { IgcContentPaneModule } from './igc-content-pane-module';\r\nimport { IgcDocumentHostModule } from './igc-document-host-module';\r\nimport { IgcTabGroupPaneModule } from './igc-tab-group-pane-module';\r\nimport { IgcTabHeaderElementModule } from './igc-tab-header-element-module';\r\nimport { IgcDockManagerComponent } from './igc-dock-manager-component';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\n\r\nexport class IgcDockManagerModule {\r\n    public static register() {\r\n                IgcSplitPaneModule.register();\r\n        IgcContentPaneModule.register();\r\n        IgcDocumentHostModule.register();\r\n        IgcTabGroupPaneModule.register();\r\n        IgcTabHeaderElementModule.register();\r\n        IgcDockManagerComponent.register();\r\n        TypeRegistrar.registerCons('IgcDockManagerComponent', IgcDockManagerComponent);        TypeRegistrar.registerCons('IgcDockManagerComponent', IgcDockManagerComponent);\r\n\r\n    }\r\n}"],"names":["DockManagerPaneType","DockManagerPaneType_$type","SplitPaneOrientation","SplitPaneOrientation_$type","UnpinnedLocation","UnpinnedLocation_$type","DockManagerPoint","a","WCNativeHelper","e","b","this","nativeElement","o","setNativeElement","c","n","value_","v","d","$t","DockManagerPane","___mustPassByValue","static","native_","undefined","toLowerCase","SplitPane","ContentPane","TabGroupPane","DocumentHost","g","j","h","l","ret_","getEnumValue","f","p","toString","m","i","$","k","ContentPaneCollection","ab","x","z","aa","ac","ad","y","t","u","s","r","q","ObservableCollection$1","constructor","super","specialize","DockManagerPaneCollection","createFromNative","IgcDockManagerPaneComponent","createImplementation","_implementation","internal","$type","externalName","name","isRegistered","create","onImplementationCreated","_settingAttributes","_attached","_queuedSetAttributes","_updatingFromAttribute","__p","_hasUserValues","Set","_stylingContainer","_stylingParent","_inStyling","_styling","ensureStylablePatched","Object","getPrototypeOf","externalObject","_initializeAdapters","_enqueueSetAttribute","attrName","attrValue","push","_flushQueuedAttributes","length","setAttribute","_a","attributeChangedCallback","oldValue","newValue","setName","findByName","findEphemera","indexOf","hasUserValues","__m","propertyName","add","container","component","parent","genericPrefix","typeName","substring","additionalPrefixes","prefix","baseType","Name","basePrefix","parentTypeName","parentPrefix","_otherStyling","IgcDockManagerPaneCollection","IgCollection","list","_createInnerColl","coll","SyncableObservableCollection$2","compare","ext","int","comp","equals","createTo","createFrom","_createFromInternal","IgcDockManagerPoint","_provideImplementation","element","IgcSplitPaneComponent","_panes","id","type","orientation","panes","innerColl","_fromInner","_setSyncTarget","_fromOuter","syncColl","SyncableObservableCollection$1","_inner","clear","size","floatingLocation","floatingWidth","floatingHeight","floatingResizable","allowEmpty","isMaximized","IgcSplitPaneModule","register","registerCons","IgcContentPaneComponent","contentId","header","headerId","tabHeaderId","unpinnedHeaderId","floatingHeaderId","allowClose","allowMaximize","allowPinning","allowDocking","acceptsInnerDock","allowFloating","unpinnedSize","isPinned","unpinnedLocation","hidden","disabled","documentOnly","IgcContentPaneModule","IgcDocumentHostComponent","rootPane","IgcDocumentHostModule","IgcContentPaneCollection","IgcTabGroupPaneComponent","selectedIndex","IgcTabGroupPaneModule","DragService","IgcDragService","DockManagerShowHeaderIconOnHover","TabHeaderElement","BaseElement","IgcTabHeaderElement","dragService","IgcTabHeaderElementModule","IgcSplitPaneCollection","SplitPaneCollection","DockManagerLayout","IgcDockManagerLayout","_floatingPanes","floatingPanes","DockManagerShowHeaderIconOnHover_$type","DockManagerResourceStrings","IgcDockManagerResourceStrings","close","pin","unpin","maximize","minimize","moreOptions","moreTabs","documents","LayoutChangeEventArgs","$ret","IgcLayoutChangeEventArgs","detail","DockManager","layoutChange","layoutChangeChanged","focusPane","IgcDockManagerComponent","_layoutChange","_layoutChange_wrapped","layout","draggedPane","dropPosition","activePane","showHeaderIconOnHover","maximizedPane","resourceStrings","allowFloatingPanesResize","disableKeyboardNavigation","allowInnerDock","ev","outerArgs","beforeLayoutChange","IgcDockManagerModule"],"sourceRoot":""}